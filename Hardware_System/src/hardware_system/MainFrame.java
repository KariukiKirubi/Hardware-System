/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hardware_system;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.TrayIcon;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author Shazka
 */
public class MainFrame extends javax.swing.JFrame {
        
         int tymerun;
        Connection conn = null;
       PreparedStatement pst =  null;
       ResultSet rs = null;
      //  DisplayTrayIcon DTI = new DisplayTrayIcon();

    /**
     * Creates new form MainFrame
     */
       
    public MainFrame() {
        initComponents();
        
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/icons/applications.png")));
    
        jLstaff.setVisible(false);
        jLadmin.setVisible(false);
        jLType.setVisible(false);
        current_user();
        StaffMax();
        AdminMax();
         Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        setSize(d);
        setLocation(0, 0);
//            
//        
//        int bal;
//        
//        
//          new Thread() {
//            public void run() {
//               
//                /*
//                 try {
//                 Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " + "C:\\wamp\\wampmanager.exe");
//                 } catch (Exception e) {
//                 JOptionPane.showMessageDialog(null, "Error");
//                 }
//                 */
//                while (tymerun == 0) {
//                    Calendar cal = new GregorianCalendar();
//
//                    int hour = cal.get(Calendar.HOUR);
//                    int min = cal.get(Calendar.MINUTE);
//                    int sec = cal.get(Calendar.SECOND);
//                    int AM_PM = cal.get(Calendar.AM_PM);
//                    String day_night = "";
//                    int hour2;
//                    if (AM_PM == 1) {
//                        day_night = "PM";
//                    } else {
//                        day_night = "AM";
//                    }
//                    if(hour==0){
//                    hour2=12;
//                    }else{
//                    hour2=hour;
//                    }
//                    String time = hour2 + ":" + min + ":" + sec +" "+day_night;
//                    GregorianCalendar today = new GregorianCalendar();
//        DateFormat df = DateFormat.getDateInstance();
//        Date kk = today.getTime();
//        String s = df.format(kk);
//        
//          Connect connectobj = new Connect();
//        conn = connectobj.connectdb();             
//        
//        try {
//            Statement stm = conn.createStatement();
//            String sql = "SELECT * FROM `current_user` WHERE `Id`=1 ";
//            rs = stm.executeQuery(sql);
//
//            while (rs.next()) {
//                   
//                  // int bal = rs.getInt("MAX(id)");  
//                   String name=rs.getString("UserName").toUpperCase();
//                   
//                  setTitle("               The System Is Currently Logged In By : "+name +"          DATE :  "+s+"          TIME :   "+time);
//                 }
//        } catch (Exception e) {
////            JOptionPane.showMessageDialog(null, e.getMessage());
////                JOptionPane.showMessageDialog(null, "Saved recorded rrrrKKKKKKKKuccessfully");
//        }
//    
//    
//       // jLDate.setText(s);
//
////                    Clock.setText(time);
////                    jClock.setText(time);
//                }
//
//            }
//
//        }.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jLstaff = new javax.swing.JLabel();
        jLadmin = new javax.swing.JLabel();
        jLType = new javax.swing.JLabel();
        jPhide = new javax.swing.JPanel();
        jBlogout = new javax.swing.JButton();
        jBsettings = new javax.swing.JButton();
        jBsell = new javax.swing.JButton();
        jBcredts = new javax.swing.JButton();
        jBstaff = new javax.swing.JButton();
        jBservices = new javax.swing.JButton();
        jBexpences = new javax.swing.JButton();
        jBupdateStock = new javax.swing.JButton();
        jBaddStock = new javax.swing.JButton();
        jMenuBar = new javax.swing.JMenuBar();
        jMreports = new javax.swing.JMenu();
        jAddStudent = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        viewStude = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMdb = new javax.swing.JMenu();
        SubSel = new javax.swing.JMenuItem();
        ExnterExamMark = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1245, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLstaff.setText("Staff");

        jLadmin.setText("Admin");

        jLType.setText("Admin");
        jLType.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLTypeMouseClicked(evt);
            }
        });

        jBlogout.setFont(new java.awt.Font("Square721 BT", 1, 14)); // NOI18N
        jBlogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Home.png"))); // NOI18N
        jBlogout.setToolTipText("Click To Log Out Of The System");
        jBlogout.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "LogOut", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM));
        jBlogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBlogoutActionPerformed(evt);
            }
        });

        jBsettings.setFont(new java.awt.Font("Square721 BT", 1, 14)); // NOI18N
        jBsettings.setIcon(new javax.swing.ImageIcon(getClass().getResource("/details/dollar_64x64.png"))); // NOI18N
        jBsettings.setToolTipText("Click To Change System Settings");
        jBsettings.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Settings", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM));
        jBsettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBsettingsActionPerformed(evt);
            }
        });

        jBsell.setFont(new java.awt.Font("Square721 BT", 1, 14)); // NOI18N
        jBsell.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/btn_cash_.png"))); // NOI18N
        jBsell.setToolTipText("Click To Sell Stock");
        jBsell.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Sell Items", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM));
        jBsell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBsellActionPerformed(evt);
            }
        });

        jBcredts.setFont(new java.awt.Font("Square721 BT", 1, 14)); // NOI18N
        jBcredts.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/archive.png"))); // NOI18N
        jBcredts.setToolTipText("Click To Record/Settle Credits Given");
        jBcredts.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Credits", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM));
        jBcredts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBcredtsActionPerformed(evt);
            }
        });

        jBstaff.setFont(new java.awt.Font("Square721 BT", 1, 14)); // NOI18N
        jBstaff.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/1 (27).png"))); // NOI18N
        jBstaff.setToolTipText("Click To Add New Staff To The System");
        jBstaff.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Manage Staff", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM));
        jBstaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBstaffActionPerformed(evt);
            }
        });

        jBservices.setFont(new java.awt.Font("Square721 BT", 1, 14)); // NOI18N
        jBservices.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/bar-code_48x48.png"))); // NOI18N
        jBservices.setToolTipText("Click To place Services Order");
        jBservices.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Services", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM));
        jBservices.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBservicesActionPerformed(evt);
            }
        });

        jBexpences.setFont(new java.awt.Font("Square721 BT", 1, 14)); // NOI18N
        jBexpences.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/project-plan_48x48.png"))); // NOI18N
        jBexpences.setToolTipText("Click To Record Expences");
        jBexpences.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Expences", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM));
        jBexpences.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBexpencesActionPerformed(evt);
            }
        });

        jBupdateStock.setFont(new java.awt.Font("Square721 BT", 1, 14)); // NOI18N
        jBupdateStock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/btn_update_.png"))); // NOI18N
        jBupdateStock.setToolTipText("Click To Order Food");
        jBupdateStock.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Update Stock", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM));
        jBupdateStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBupdateStockActionPerformed(evt);
            }
        });

        jBaddStock.setFont(new java.awt.Font("Square721 BT", 1, 14)); // NOI18N
        jBaddStock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/data_add.png"))); // NOI18N
        jBaddStock.setToolTipText("Click To Register New Student To The System");
        jBaddStock.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Add Stock", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM));
        jBaddStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBaddStockActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPhideLayout = new javax.swing.GroupLayout(jPhide);
        jPhide.setLayout(jPhideLayout);
        jPhideLayout.setHorizontalGroup(
            jPhideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPhideLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPhideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jBsettings, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBcredts, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBstaff, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBexpences, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBservices, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBsell, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBupdateStock, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBaddStock, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBlogout, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPhideLayout.setVerticalGroup(
            jPhideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPhideLayout.createSequentialGroup()
                .addComponent(jBaddStock, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBupdateStock, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBsell)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBservices, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBexpences, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBstaff, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBcredts, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBsettings, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBlogout, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE))
        );

        jMreports.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMreports.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/notes_48x48.png"))); // NOI18N
        jMreports.setText("REPORTS PLATFORM             ");

        jAddStudent.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jAddStudent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/attatchments/add_student.png"))); // NOI18N
        jAddStudent.setText("Credits");
        jAddStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAddStudentActionPerformed(evt);
            }
        });
        jMreports.add(jAddStudent);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/attatchments/update_student.png"))); // NOI18N
        jMenuItem1.setText("Reports");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMreports.add(jMenuItem1);

        viewStude.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        viewStude.setIcon(new javax.swing.ImageIcon(getClass().getResource("/attatchments/view_stud.png"))); // NOI18N
        viewStude.setText("Reportz");
        viewStude.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewStudeActionPerformed(evt);
            }
        });
        jMreports.add(viewStude);
        jMreports.add(jSeparator3);

        jMenuBar.add(jMreports);

        jMdb.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMdb.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/notebook.png"))); // NOI18N
        jMdb.setText("DATABASE                      ");

        SubSel.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        SubSel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/attatchments/addSubj.png"))); // NOI18N
        SubSel.setText("Sell");
        SubSel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubSelActionPerformed(evt);
            }
        });
        jMdb.add(SubSel);

        ExnterExamMark.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        ExnterExamMark.setIcon(new javax.swing.ImageIcon(getClass().getResource("/attatchments/1111111111111111111111.png"))); // NOI18N
        ExnterExamMark.setText("Update/Delete Staff");
        ExnterExamMark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExnterExamMarkActionPerformed(evt);
            }
        });
        jMdb.add(ExnterExamMark);
        jMdb.add(jSeparator2);

        jMenu2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/attatchments/an.png"))); // NOI18N
        jMenu2.setText("Back Up Data Base");
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });

        jMenuItem5.setText("jMenuItem5");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMdb.add(jMenu2);

        jMenuBar.add(jMdb);

        jMenu5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMenu5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/details/table_add.png"))); // NOI18N
        jMenu5.setText("PLACE ORDERS                   ");
        jMenuBar.add(jMenu5);

        jMenu1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/details/archive.png"))); // NOI18N
        jMenu1.setText("REPORTS PLATFORM                 ");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });

        jMenuItem9.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/attatchments/reporr.png"))); // NOI18N
        jMenuItem9.setText("Daily Reports");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem9);

        jMenuItem11.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/attatchments/information.png"))); // NOI18N
        jMenuItem11.setText("Weekly Reports");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem11);

        jMenuItem13.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/attatchments/an.png"))); // NOI18N
        jMenuItem13.setText("Monthly Reports");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem13);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/exclamation.png"))); // NOI18N
        jMenuItem2.setText("Annualy Reports");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar.add(jMenu1);

        jMenu3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMenu3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/user_48x48.png"))); // NOI18N
        jMenu3.setText("SYSTEM  MANAGER    ");

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/attatchments/tch.png"))); // NOI18N
        jMenuItem3.setText("Complain");
        jMenuItem3.setEnabled(false);
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_2, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Tray.png"))); // NOI18N
        jMenuItem4.setText("Hide Buttons");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuItem8.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/applications.png"))); // NOI18N
        jMenuItem8.setText("Show Buttons");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem8);

        jMenuBar.add(jMenu3);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLstaff)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLadmin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLType))
                    .addComponent(jPhide, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLstaff)
                    .addComponent(jLadmin)
                    .addComponent(jLType))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPhide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jDesktopPane1)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBaddStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBaddStockActionPerformed
     
        
        
        AddStock kk=new AddStock();
       Dimension desktopSize = jDesktopPane1.getSize();
        Dimension jInternalFrameSize = kk.getSize();
        kk.setLocation((desktopSize.width - jInternalFrameSize.width)/2,
            (desktopSize.height- jInternalFrameSize.height)/2);
        jDesktopPane1.add(kk);
        kk.setVisible(true);
    }//GEN-LAST:event_jBaddStockActionPerformed

    private void jBupdateStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBupdateStockActionPerformed
        Update_Stock kk=new Update_Stock();
       Dimension desktopSize = jDesktopPane1.getSize();
        Dimension jInternalFrameSize = kk.getSize();
        kk.setLocation((desktopSize.width - jInternalFrameSize.width)/2,
            (desktopSize.height- jInternalFrameSize.height)/2);
        jDesktopPane1.add(kk);
        kk.setVisible(true);
    }//GEN-LAST:event_jBupdateStockActionPerformed

    private void jBsellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBsellActionPerformed
//      SellStock kk=new SellStock();
//     Dimension desktopSize = jDesktopPane1.getSize();
//        Dimension jInternalFrameSize = kk.getSize();
//        kk.setLocation((desktopSize.width - jInternalFrameSize.width)/2,
//            (desktopSize.height- jInternalFrameSize.height)/2);
//        jDesktopPane1.add(kk);
//        kk.setVisible(true);
         try {
                                        Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " + "C:\\Users\\Shazka Systems\\Documents\\NetBeansProjects\\SellStock\\dist\\SellStock.jar");
                                        //this.dispose();
                                    } catch (Exception ex) {
                                        JOptionPane.showMessageDialog(null, ex.getMessage());
                                    }
      
     
     

// TODO add your handling code here:
    }//GEN-LAST:event_jBsellActionPerformed

    private void jBservicesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBservicesActionPerformed
            try {
                                        Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " + "C:\\Users\\Shazka Systems\\Documents\\NetBeansProjects\\Services\\dist\\Services.jar");
                                        //this.dispose();
                                    } catch (Exception ex) {
                                        JOptionPane.showMessageDialog(null, ex.getMessage());
                                    }
        
    }//GEN-LAST:event_jBservicesActionPerformed

    private void jBexpencesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBexpencesActionPerformed
                Expences kk=new Expences();
                        
        
                Dimension desktopSize = jDesktopPane1.getSize();
        Dimension jInternalFrameSize = kk.getSize();
        kk.setLocation((desktopSize.width - jInternalFrameSize.width)/2,
            (desktopSize.height- jInternalFrameSize.height)/2);
        jDesktopPane1.add(kk);
        kk.setVisible(true);
        
    }//GEN-LAST:event_jBexpencesActionPerformed

    private void jBstaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBstaffActionPerformed
          Add_Staff kk=new Add_Staff();
        Dimension desktopSize = jDesktopPane1.getSize();
        Dimension jInternalFrameSize = kk.getSize();
        kk.setLocation((desktopSize.width - jInternalFrameSize.width)/2,
            (desktopSize.height- jInternalFrameSize.height)/2);
        jDesktopPane1.add(kk);
        kk.setVisible(true);
    }//GEN-LAST:event_jBstaffActionPerformed

    private void jBcredtsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBcredtsActionPerformed
          Credits kk=new Credits();
       Dimension desktopSize = jDesktopPane1.getSize();
        Dimension jInternalFrameSize = kk.getSize();
        kk.setLocation((desktopSize.width - jInternalFrameSize.width)/2,
            (desktopSize.height- jInternalFrameSize.height)/2);
        jDesktopPane1.add(kk);
        kk.setVisible(true);
    }//GEN-LAST:event_jBcredtsActionPerformed

    private void jBsettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBsettingsActionPerformed
       admin_details kk=new admin_details();
       kk.setVisible(true);
    }//GEN-LAST:event_jBsettingsActionPerformed

    private void jBlogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBlogoutActionPerformed
        
        String type=jLType.getText();
        
        if("STAFF".equals(type)){
                   LogoutStaff();
        user_out();
        admin_log kk=new admin_log();
       kk.setVisible(true);
       this.dispose();
                   
                   }  else{  
        
        LogoutAdmin();
        user_out();
        admin_log kk=new admin_log();
       kk.setVisible(true);
       this.dispose();
        }
    
    }//GEN-LAST:event_jBlogoutActionPerformed

    private void jAddStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAddStudentActionPerformed
             Credits kk=new Credits();
      Dimension desktopSize = jDesktopPane1.getSize();
        Dimension jInternalFrameSize = kk.getSize();
        kk.setLocation((desktopSize.width - jInternalFrameSize.width)/2,
            (desktopSize.height- jInternalFrameSize.height)/2);
        jDesktopPane1.add(kk);
        kk.setVisible(true);
    }//GEN-LAST:event_jAddStudentActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
                Reports kk = new Reports();
                kk.setVisible(true);


//                 Student_Reg kk=new Student_Reg();
//       jDesktopPane1.add(kk);
//       kk.setVisible(true);//        UpdateStudent2 us = new UpdateStudent2(this, true);
//        us.setLocationRelativeTo(this);
//        us.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void viewStudeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewStudeActionPerformed
             Reportz kk=new Reportz();
     Dimension desktopSize = jDesktopPane1.getSize();
        Dimension jInternalFrameSize = kk.getSize();
        kk.setLocation((desktopSize.width - jInternalFrameSize.width)/2,
            (desktopSize.height- jInternalFrameSize.height)/2);
        jDesktopPane1.add(kk);
        kk.setVisible(true);
    }//GEN-LAST:event_viewStudeActionPerformed

    private void SubSelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubSelActionPerformed
                        Sells ss = new Sells(this, rootPaneCheckingEnabled);
                ss.setLocationRelativeTo(this);
                ss.setVisible(true);
    }//GEN-LAST:event_SubSelActionPerformed

    private void ExnterExamMarkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExnterExamMarkActionPerformed
//        Staff_Reg kk=new Staff_Reg();
//            jDesktopPane1.add(kk);
//       kk.setVisible(true);//        RecordExam re = new RecordExam(this, rootPaneCheckingEnabled);
////        re.setLocationRelativeTo(this);
//        re.setVisible(true);
    }//GEN-LAST:event_ExnterExamMarkActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
//        StudentExamView sev = new StudentExamView(this, rootPaneCheckingEnabled);
//        sev.setTitle("Student exam");
//        sev.setLocationRelativeTo(this);
//        sev.setVisible(true);
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        //        ExamAnalysis ad = new ExamAnalysis(this, rootPaneCheckingEnabled);
        //        ad.setLocationRelativeTo(this);
        //        ad.setTitle("Exams Analysis Panel");
        //        ad.setVisible(true);
//        ClassExamView cev = new ClassExamView(this, rootPaneCheckingEnabled);
//        //class_ex cev = new class_ex();
//        cev.setLocationRelativeTo(this);
//        cev.setVisible(true);
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
//        ExamAnalysis ad = new ExamAnalysis(this, rootPaneCheckingEnabled);
//        ad.setLocationRelativeTo(this);
//        ad.setTitle("Exams Analysis Panel");
//        ad.setVisible(true);
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
//         Complain kk=new Complain();
//            jDesktopPane1.add(kk);
//            kk.setLocation(200,100);
//       kk.setVisible(true);//        NewTeacher nt = new NewTeacher(this, rootPaneCheckingEnabled);
//        nt.setLocationRelativeTo(this);
//        nt.setTitle("Add New Teacher");
//        nt.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
                jPhide.setVisible(false);     // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
            db_backup d = new db_backup(this, rootPaneCheckingEnabled);
        d.setTitle("Create Back Up");
        d.setLocationRelativeTo(this);
        d.setVisible(true);  // TODO add your handling code here:
    }//GEN-LAST:event_jMenu2ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
            jPhide.setVisible(true);      // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
//             Reports_Platform cu = new Reports_Platform(new MainFrame(), true);
//        cu.setLocationRelativeTo(MainFrame.this);
//        cu.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu1MouseClicked

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
       db_backup d = new db_backup(this, rootPaneCheckingEnabled);
        d.setTitle("Create Back Up");
        d.setLocationRelativeTo(this);
        d.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jLTypeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLTypeMouseClicked
       jPhide.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_jLTypeMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                   
                }
            //    UIManager.setLookAndFeel("com.jtattoo.plaf.noire.NoireLookAndF`eel");
               // UIManager.setLookAndFeel("com.jtattoo.plaf.aero.AeroLookAndFeel");
               // UIManager.setLookAndFeel("com.jtattoo.plaf.acryl.AcrylLookAndFeel");
               // UIManager.setLookAndFeel("com.jtattoo.plaf.hifi.HiFiLookAndFeel");
              
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem ExnterExamMark;
    private javax.swing.JMenuItem SubSel;
    private javax.swing.JMenuItem jAddStudent;
    private javax.swing.JButton jBaddStock;
    private javax.swing.JButton jBcredts;
    private javax.swing.JButton jBexpences;
    private javax.swing.JButton jBlogout;
    private javax.swing.JButton jBsell;
    private javax.swing.JButton jBservices;
    private javax.swing.JButton jBsettings;
    private javax.swing.JButton jBstaff;
    private javax.swing.JButton jBupdateStock;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLType;
    private javax.swing.JLabel jLadmin;
    private javax.swing.JLabel jLstaff;
    private javax.swing.JMenu jMdb;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JMenu jMreports;
    private javax.swing.JPanel jPhide;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JMenuItem viewStude;
    // End of variables declaration//GEN-END:variables

public void notification(){
        
          try {
                            DisplayTrayIcon.trayIcon.displayMessage("Application Information[Administrator]", "Log in to The Hardware Point Of Sale Management software Successfully,Welcome.", TrayIcon.MessageType.INFO);

                            try {
                                Thread.sleep(3000);

                            } catch (Exception e) {
                            }

                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e);

                        }
         try {
           // Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " + "C:\\Mess_System\\Welcome.vbs");
            //this.dispose();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
        
        }
        
public void user_out(){
    
         Connect connectobj = new Connect();
        conn = connectobj.connectdb();
        
        String name="kk";
        String type="kk";
        
         try {
            //String sgl="INSERT INTO `banking`(`accnt`, `Name`, `IdNo.`, `PhoneNo`, `Email`, `Nationality`, `Occupation`, `Gender`, `MaritualStatus`, `Date`, `Balance`) VALUES ("342","karis","867","34546","karijavade","kenyan","programmer","male","single","hrjh","44232"")";
            String sql = "UPDATE `current_user` SET `UserName`='"+name+"',`UserType`='"+type+"' WHERE `Id`=1";

            pst = conn.prepareStatement(sql);
            pst.execute();
                pst.close();
            //JOptionPane.showMessageDialog(null, "logs out Successfully");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());

        }
         
    
    }

public void AdminMax(){              
                  Connect connectobj = new Connect();
            conn = connectobj.connectdb();
                  try {           
            Statement s = conn.createStatement();
            String as = "SELECT MAX(Id) FROM admin_logs";
            ResultSet rs = s.executeQuery(as);
            int r = 0;
            int records = 0;
            while (rs.next()) {
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
                int dd=rs.getInt("MAX(Id)");
               jLadmin.setText(String.valueOf(dd));
                r++;
            }
            s.close();
            rs.close();
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                  
              }

public void StaffMax(){              
                  Connect connectobj = new Connect();
            conn = connectobj.connectdb();
                  try {           
            Statement s = conn.createStatement();
            String as = "SELECT MAX(Id) FROM staff_log";
            ResultSet rs = s.executeQuery(as);
            int r = 0;
            int records = 0;
            while (rs.next()) {
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
                int dd=rs.getInt("MAX(Id)");
               jLstaff.setText(String.valueOf(dd));
                r++;
            }
            s.close();
            rs.close();
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
              }

public void LogoutAdmin(){
    
                Connect connectobj = new Connect();
            conn = connectobj.connectdb();
            
           String id=jLadmin.getText();
           long time = System.currentTimeMillis();
                            java.sql.Timestamp timestamp = new java.sql.Timestamp(time);
                 try {
            //String sgl="INSERT INTO `banking`(`accnt`, `Name`, `IdNo.`, `PhoneNo`, `Email`, `Nationality`, `Occupation`, `Gender`, `MaritualStatus`, `Date`, `Balance`) VALUES ("342","karis","867","34546","karijavade","kenyan","programmer","male","single","hrjh","44232"")";
            String sql = "Update `admin_logs` set `LogOut`='" + timestamp + "' where`Id`='" + id + "'";

            pst = conn.prepareStatement(sql);
            pst.execute();
            pst.close();

           // JOptionPane.showMessageDialog(null, "Saved Successfully");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());

        } 


}

public void LogoutStaff(){
    
                Connect connectobj = new Connect();
            conn = connectobj.connectdb();
            
           String id=jLstaff.getText();
           long time = System.currentTimeMillis();
                            java.sql.Timestamp timestamp = new java.sql.Timestamp(time);
                 try {
            //String sgl="INSERT INTO `banking`(`accnt`, `Name`, `IdNo.`, `PhoneNo`, `Email`, `Nationality`, `Occupation`, `Gender`, `MaritualStatus`, `Date`, `Balance`) VALUES ("342","karis","867","34546","karijavade","kenyan","programmer","male","single","hrjh","44232"")";
            String sql = "Update `staff_log` set `LogOut`='" + timestamp + "' where`Id`='" + id + "'";

            pst = conn.prepareStatement(sql);
            pst.execute();
            pst.close();

           // JOptionPane.showMessageDialog(null, "Saved Successfully");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());

        } 


}

public void current_user(){
    
         Connect connectobj = new Connect();
        conn = connectobj.connectdb();    
        
         GregorianCalendar today = new GregorianCalendar();
        DateFormat df = DateFormat.getDateInstance();
        Date kk = today.getTime();
        String s = df.format(kk);
        
        try {
            Statement stm = conn.createStatement();
            String sql = "SELECT * FROM `current_user` WHERE `Id`=1 ";
            rs = stm.executeQuery(sql);

            while (rs.next()) {
                   
                  // int bal = rs.getInt("MAX(id)");  
                   String name=rs.getString("UserName").toUpperCase();
                   String type=rs.getString("UserType").toUpperCase();
                   jLType.setText(type);
                   
                    setTitle("               The System Is Currently Logged In By : "+name +"          DATE :  "+s);
                   
                   if("STAFF".equals(type)){
                   jBaddStock.setEnabled(false);
                   jBupdateStock.setEnabled(false);
                   jBstaff.setEnabled(false);
                   jBsettings.setEnabled(false);
                   jMreports.setEnabled(false);
                   jMdb.setEnabled(false);
                   
                   
                   }
                   
                  
                 }
            stm.close();
            rs.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
                JOptionPane.showMessageDialog(null, "Saved recorded SKKKKKKKKKKKKKKKKKuccessfully");
        }
    
    }

public void centerJIF(JInternalFrame jif) {
    Dimension desktopSize =jDesktopPane1.getSize();
    Dimension jInternalFrameSize = jif.getSize();
    int width = (desktopSize.width - jInternalFrameSize.width) / 2;
    int height = (desktopSize.height - jInternalFrameSize.height) / 2;
    jif.setLocation(width, height);
    jif.setVisible(true);
}

public void cheaker(){}
    
}
