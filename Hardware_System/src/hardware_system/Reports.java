/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hardware_system;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Shazka Systems
 */
public class Reports extends javax.swing.JFrame {
     int timeRun = 0;
    int tymerun;
        Connection conn = null;
        Statement stm=null;
       PreparedStatement pst =  null;
       ResultSet rs = null;

    /**
     * Creates new form Reports
     */
    public Reports() {
        initComponents();
        
         GregorianCalendar today = new GregorianCalendar();
        DateFormat df = DateFormat.getDateInstance();
        Date kk = today.getTime();
        String s = df.format(kk);
        jLDate.setText(s);
        int bal;
        
        
          new Thread() {
            public void run() {
               
                /*
                 try {
                 Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " + "C:\\wamp\\wampmanager.exe");
                 } catch (Exception e) {
                 JOptionPane.showMessageDialog(null, "Error");
                 }
                 */
                while (timeRun == 0) {
                    Calendar cal = new GregorianCalendar();

                    int hour = cal.get(Calendar.HOUR);
                    int min = cal.get(Calendar.MINUTE);
                    int sec = cal.get(Calendar.SECOND);
                    
                    int day=cal.get(Calendar.DAY_OF_MONTH);
                    int month=cal.get(Calendar.MONTH)+1;
                    int year=cal.get(Calendar.YEAR);
                    
                    int DoY=cal.get(Calendar.DAY_OF_YEAR);
                     jLdOy.setText(String.valueOf(DoY));
                     
                    
                    jLday.setText(String.valueOf(day));
                    jLmonth.setText(String.valueOf(month));
                    jLyear.setText(String.valueOf(year));
                    
                    
                    
                    int AM_PM = cal.get(Calendar.AM_PM);
                    String day_night = "";
                    int hour2;
                    if(hour==0){
                    hour2=12;
                    }else{
                    hour2=hour;
                    }

                    if (AM_PM == 1) {
                        day_night = "PM";
                    } else {
                        day_night = "AM";
                    }
                    String time = hour2 + ":" + min + ":" + sec +" "+day_night;

                    Clock.setText(time);
                }

            }

        }.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTDailyCashSale = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jTcashsale = new javax.swing.JTextField();
        jTabbedPane6 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTtableDailyCreditSale = new javax.swing.JTable();
        jTcreditSale = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTabbedPane7 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTtableDailyProfit = new javax.swing.JTable();
        jTDayProfit = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTabbedPane8 = new javax.swing.JTabbedPane();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableDayExpence = new javax.swing.JTable();
        jTexpences = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTabbedPane9 = new javax.swing.JTabbedPane();
        jPanel14 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTprofitGain = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTexpeUsed = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTnetProfit = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel9 = new javax.swing.JPanel();
        jTabbedPane10 = new javax.swing.JTabbedPane();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTableweeklyCashSale1 = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();
        jTweeklycashsale1 = new javax.swing.JTextField();
        jTabbedPane11 = new javax.swing.JTabbedPane();
        jPanel33 = new javax.swing.JPanel();
        jPanel34 = new javax.swing.JPanel();
        jScrollPane14 = new javax.swing.JScrollPane();
        jTtableweeklyCreditSale1 = new javax.swing.JTable();
        jTweeklycreditSale1 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jTabbedPane23 = new javax.swing.JTabbedPane();
        jPanel35 = new javax.swing.JPanel();
        jPanel36 = new javax.swing.JPanel();
        jScrollPane15 = new javax.swing.JScrollPane();
        jTtableweeklyProfit1 = new javax.swing.JTable();
        jTweeklyProfit1 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jTabbedPane24 = new javax.swing.JTabbedPane();
        jPanel37 = new javax.swing.JPanel();
        jPanel38 = new javax.swing.JPanel();
        jScrollPane16 = new javax.swing.JScrollPane();
        jTableweeklyExpence1 = new javax.swing.JTable();
        jTweeklyexpences1 = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jTabbedPane30 = new javax.swing.JTabbedPane();
        jPanel39 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jTweeklyprofitGain1 = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jTweeklyexpeUsed1 = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jTweeklynetProfit1 = new javax.swing.JTextField();
        jScrollPane19 = new javax.swing.JScrollPane();
        jTableWeeklyStock = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        jCdayFrom = new javax.swing.JComboBox();
        jLabel33 = new javax.swing.JLabel();
        jCdayTo = new javax.swing.JComboBox();
        jCyear1 = new javax.swing.JComboBox();
        jLabel32 = new javax.swing.JLabel();
        jCmonth1 = new javax.swing.JComboBox();
        jPanel15 = new javax.swing.JPanel();
        jTabbedPane13 = new javax.swing.JTabbedPane();
        jPanel16 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableMonthCashSale1 = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jTMonthcashsale1 = new javax.swing.JTextField();
        jTabbedPane14 = new javax.swing.JTabbedPane();
        jPanel17 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTtableMonthyCreditSale1 = new javax.swing.JTable();
        jTMonthcreditSale1 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTabbedPane15 = new javax.swing.JTabbedPane();
        jPanel19 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTtableMonthProfit1 = new javax.swing.JTable();
        jTMonthProfit1 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTabbedPane16 = new javax.swing.JTabbedPane();
        jPanel21 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTableMonthExpence = new javax.swing.JTable();
        jTMonthExpences1 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTabbedPane17 = new javax.swing.JTabbedPane();
        jPanel23 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jTMonthprofitGain1 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTMonthExpeUsed1 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTMonthNetProfit1 = new javax.swing.JTextField();
        jScrollPane17 = new javax.swing.JScrollPane();
        jTableMonthlyStock = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel34 = new javax.swing.JLabel();
        jPanel24 = new javax.swing.JPanel();
        jTabbedPane18 = new javax.swing.JTabbedPane();
        jPanel25 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTableAnnualCashSale2 = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        jTAnnualcashsale2 = new javax.swing.JTextField();
        jTabbedPane19 = new javax.swing.JTabbedPane();
        jPanel26 = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTtableAnnualCreditSale2 = new javax.swing.JTable();
        jTAnnualcreditSale2 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jTabbedPane20 = new javax.swing.JTabbedPane();
        jPanel28 = new javax.swing.JPanel();
        jPanel29 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTtableAnnualProfit2 = new javax.swing.JTable();
        jTAnnualProfit2 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jTabbedPane21 = new javax.swing.JTabbedPane();
        jPanel30 = new javax.swing.JPanel();
        jPanel31 = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTableAnnualExpence1 = new javax.swing.JTable();
        jTAnnualExpences2 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jTabbedPane22 = new javax.swing.JTabbedPane();
        jPanel32 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jTAnnualprofitGain2 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jTAnnualExpeUsed2 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jTAnnualNetProfit2 = new javax.swing.JTextField();
        jScrollPane18 = new javax.swing.JScrollPane();
        jTableAnnualStock = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jLabel35 = new javax.swing.JLabel();
        Clock = new javax.swing.JLabel();
        jLDate = new javax.swing.JLabel();
        jLday = new javax.swing.JLabel();
        jLmonth = new javax.swing.JLabel();
        jLyear = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jCday = new javax.swing.JComboBox();
        jCmonth = new javax.swing.JComboBox();
        jCyear = new javax.swing.JComboBox();
        jLabel38 = new javax.swing.JLabel();
        jLdOy = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTDailyCashSale.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ReceptNo", "Item ", "@Ksh", "Qty", "Amount", "Date", "Time", "Sold By"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTDailyCashSale);

        jLabel2.setText("Total Cash Sale");

        jTcashsale.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTcashsale.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(390, 390, 390)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(jTcashsale, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(404, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTcashsale, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane5.addTab("Daily Cash Sale", jPanel4);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 9, Short.MAX_VALUE)
        );

        jTtableDailyCreditSale.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Recept No.", "Total Amount", "Amount Paid", "Balance", "Customer", "Contact", "Date", "Time", "User"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTtableDailyCreditSale);

        jTcreditSale.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTcreditSale.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel3.setText("Total Credit  Given");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(678, 678, 678)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(310, 310, 310)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(jTcreditSale, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTcreditSale, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane6.addTab("tab1", jPanel5);

        jTabbedPane5.addTab("Daily Credit Sale", jTabbedPane6);

        jTtableDailyProfit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Item Sold", "Profit Gained", "Date", "Time", "User"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTtableDailyProfit);

        jTDayProfit.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTDayProfit.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel4.setText("Total Day Profit Gained");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(379, 379, 379)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTDayProfit, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTDayProfit, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane7.addTab("tab1", jPanel7);

        jTabbedPane5.addTab("Daily Total Profit", jTabbedPane7);

        jTableDayExpence.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Expence", "Amount", "Date", "Time", "User"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTableDayExpence);

        jTexpences.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTexpences.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel5.setText("Total Expences ");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(361, 361, 361)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTexpences, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(431, Short.MAX_VALUE))
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(jScrollPane4)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTexpences, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(126, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane8.addTab("tab1", jPanel12);

        jTabbedPane5.addTab("Total Daily Expences", jTabbedPane8);

        jLabel6.setText("Total Profit Gained");

        jTprofitGain.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTprofitGain.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTprofitGain.setText("0");

        jLabel7.setText("Total Expence Used");

        jTexpeUsed.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTexpeUsed.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTexpeUsed.setText("0");

        jLabel8.setText("Net Profit");

        jTnetProfit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTnetProfit.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTnetProfit.setText("0");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(jTnetProfit, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel14Layout.createSequentialGroup()
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(59, 59, 59)
                            .addComponent(jTexpeUsed, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel14Layout.createSequentialGroup()
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(59, 59, 59)
                            .addComponent(jTprofitGain, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(702, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTprofitGain, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTexpeUsed, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTnetProfit, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane9.addTab("tab1", jPanel14);

        jTabbedPane5.addTab("Total Daily Net Profit", jTabbedPane9);

        jButton1.setText("Generate All");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setText("Today :");
        jLabel16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel16MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 1152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 1, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Daily Reports", jPanel3);

        jTableweeklyCashSale1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ReceptNo", "Item ", "@Ksh", "Qty", "Amount", "Date", "Time", "Sold By"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane13.setViewportView(jTableweeklyCashSale1);

        jLabel24.setText("Total Cash Sale");

        jTweeklycashsale1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTweeklycashsale1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(390, 390, 390)
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(jTweeklycashsale1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(405, Short.MAX_VALUE))
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 1148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTweeklycashsale1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jTabbedPane10.addTab("Weekly Cash Sale", jPanel10);

        javax.swing.GroupLayout jPanel34Layout = new javax.swing.GroupLayout(jPanel34);
        jPanel34.setLayout(jPanel34Layout);
        jPanel34Layout.setHorizontalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel34Layout.setVerticalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 9, Short.MAX_VALUE)
        );

        jTtableweeklyCreditSale1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Recept No.", "Total Amount", "Amount Paid", "Balance", "Customer", "Contact", "Date", "Time", "User"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane14.setViewportView(jTtableweeklyCreditSale1);

        jTweeklycreditSale1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTweeklycreditSale1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel25.setText("Total Credit  Given");

        javax.swing.GroupLayout jPanel33Layout = new javax.swing.GroupLayout(jPanel33);
        jPanel33.setLayout(jPanel33Layout);
        jPanel33Layout.setHorizontalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addGap(678, 678, 678)
                .addComponent(jPanel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addGap(310, 310, 310)
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(jTweeklycreditSale1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 1151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel33Layout.setVerticalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTweeklycreditSale1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addComponent(jPanel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane11.addTab("tab1", jPanel33);

        jTabbedPane10.addTab("Weekly Credit Sale", jTabbedPane11);

        jTtableweeklyProfit1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Item Sold", "Profit Gained", "Date", "Time", "User"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane15.setViewportView(jTtableweeklyProfit1);

        jTweeklyProfit1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTweeklyProfit1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel26.setText("Total Day Profit Gained");

        javax.swing.GroupLayout jPanel36Layout = new javax.swing.GroupLayout(jPanel36);
        jPanel36.setLayout(jPanel36Layout);
        jPanel36Layout.setHorizontalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel36Layout.createSequentialGroup()
                .addGap(379, 379, 379)
                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTweeklyProfit1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel36Layout.createSequentialGroup()
                .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 1148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel36Layout.setVerticalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel36Layout.createSequentialGroup()
                .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTweeklyProfit1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel35Layout = new javax.swing.GroupLayout(jPanel35);
        jPanel35.setLayout(jPanel35Layout);
        jPanel35Layout.setHorizontalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addComponent(jPanel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel35Layout.setVerticalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane23.addTab("tab1", jPanel35);

        jTabbedPane10.addTab("Weekly Total Profit", jTabbedPane23);

        jTableweeklyExpence1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Expence", "Amount", "Date", "Time", "User"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane16.setViewportView(jTableweeklyExpence1);

        jTweeklyexpences1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTweeklyexpences1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel27.setText("Total Expences ");

        javax.swing.GroupLayout jPanel38Layout = new javax.swing.GroupLayout(jPanel38);
        jPanel38.setLayout(jPanel38Layout);
        jPanel38Layout.setHorizontalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel38Layout.createSequentialGroup()
                .addGap(361, 361, 361)
                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTweeklyexpences1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(425, Short.MAX_VALUE))
            .addGroup(jPanel38Layout.createSequentialGroup()
                .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 1149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel38Layout.setVerticalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel38Layout.createSequentialGroup()
                .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTweeklyexpences1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(126, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel37Layout = new javax.swing.GroupLayout(jPanel37);
        jPanel37.setLayout(jPanel37Layout);
        jPanel37Layout.setHorizontalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel37Layout.setVerticalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel37Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel38, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane24.addTab("tab1", jPanel37);

        jTabbedPane10.addTab("Total Weekly Expences", jTabbedPane24);

        jLabel28.setText("Total Profit Gained");

        jTweeklyprofitGain1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTweeklyprofitGain1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTweeklyprofitGain1.setText("0");

        jLabel29.setText("Total Expence Used");

        jTweeklyexpeUsed1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTweeklyexpeUsed1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTweeklyexpeUsed1.setText("0");

        jLabel30.setText("Net Profit");

        jTweeklynetProfit1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTweeklynetProfit1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTweeklynetProfit1.setText("0");

        javax.swing.GroupLayout jPanel39Layout = new javax.swing.GroupLayout(jPanel39);
        jPanel39.setLayout(jPanel39Layout);
        jPanel39Layout.setHorizontalGroup(
            jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel39Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel39Layout.createSequentialGroup()
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(jTweeklynetProfit1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel39Layout.createSequentialGroup()
                            .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(59, 59, 59)
                            .addComponent(jTweeklyexpeUsed1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel39Layout.createSequentialGroup()
                            .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(59, 59, 59)
                            .addComponent(jTweeklyprofitGain1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(701, Short.MAX_VALUE))
        );
        jPanel39Layout.setVerticalGroup(
            jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel39Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTweeklyprofitGain1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTweeklyexpeUsed1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTweeklynetProfit1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(153, Short.MAX_VALUE))
        );

        jTabbedPane30.addTab("tab1", jPanel39);

        jTabbedPane10.addTab("Total Weekly Net Profit", jTabbedPane30);

        jTableWeeklyStock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Brand Code", "Description", "Specification", "Qty Added", "Buy Price", "Sell Price", "Date", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane19.setViewportView(jTableWeeklyStock);

        jTabbedPane10.addTab("Weekly Stock Added", jScrollPane19);

        jButton4.setText("Generate All");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel31.setText("Today");
        jLabel31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel31MouseClicked(evt);
            }
        });

        jCdayFrom.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jCdayFrom.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Day--", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel33.setText("From Day :");

        jCdayTo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jCdayTo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Day--", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jCyear1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jCyear1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Year--", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022" }));

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel32.setText("To Day :");

        jCmonth1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jCmonth1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Month--", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        jCmonth1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCmonth1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jCdayFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jCdayTo, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74)
                        .addComponent(jCmonth1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(jCyear1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabbedPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 1151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCmonth1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jCdayTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jCyear1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jCdayFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Weekly Reports", jPanel9);

        jTabbedPane1.addTab("Weekly Reports", jTabbedPane2);

        jTableMonthCashSale1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ReceptNo", "Item ", "@Ksh", "Qty", "Amount", "Date", "Time", "Sold By"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jTableMonthCashSale1);

        jLabel9.setText("Total Cash Sale");

        jTMonthcashsale1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTMonthcashsale1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(390, 390, 390)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(jTMonthcashsale1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(408, Short.MAX_VALUE))
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 1148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTMonthcashsale1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane13.addTab("Monthly Cash Sale", jPanel16);

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 472, Short.MAX_VALUE)
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 9, Short.MAX_VALUE)
        );

        jTtableMonthyCreditSale1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Recept No.", "Total Amount", "Amount Paid", "Balance", "Customer", "Contact", "Date", "Time", "User"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(jTtableMonthyCreditSale1);

        jTMonthcreditSale1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTMonthcreditSale1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel10.setText("Total Credit  Given");

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(678, 678, 678)
                .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(310, 310, 310)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(jTMonthcreditSale1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 1153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTMonthcreditSale1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane14.addTab("tab1", jPanel17);

        jTabbedPane13.addTab("Monthly Credit Sale", jTabbedPane14);

        jTtableMonthProfit1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Item Sold", "Profit Gained", "Date", "Time", "User"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(jTtableMonthProfit1);

        jTMonthProfit1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTMonthProfit1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel11.setText("Total Day Profit Gained");

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(379, 379, 379)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTMonthProfit1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(406, Short.MAX_VALUE))
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 1149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTMonthProfit1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane15.addTab("tab1", jPanel19);

        jTabbedPane13.addTab("Monthly Total Profit", jTabbedPane15);

        jTableMonthExpence.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Expence", "Amount", "Date", "Time", "User"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(jTableMonthExpence);

        jTMonthExpences1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTMonthExpences1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel12.setText("Total Expences ");

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGap(361, 361, 361)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTMonthExpences1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(430, Short.MAX_VALUE))
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 1148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTMonthExpences1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(126, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane16.addTab("tab1", jPanel21);

        jTabbedPane13.addTab("Total Monthly Expences", jTabbedPane16);

        jLabel13.setText("Total Profit Gained");

        jTMonthprofitGain1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTMonthprofitGain1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTMonthprofitGain1.setText("0");

        jLabel14.setText("Total Expence Used");

        jTMonthExpeUsed1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTMonthExpeUsed1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTMonthExpeUsed1.setText("0");

        jLabel15.setText("Net Profit");

        jTMonthNetProfit1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTMonthNetProfit1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTMonthNetProfit1.setText("0");

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(jTMonthNetProfit1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel23Layout.createSequentialGroup()
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(59, 59, 59)
                            .addComponent(jTMonthExpeUsed1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel23Layout.createSequentialGroup()
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(59, 59, 59)
                            .addComponent(jTMonthprofitGain1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(706, Short.MAX_VALUE))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTMonthprofitGain1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTMonthExpeUsed1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTMonthNetProfit1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(154, Short.MAX_VALUE))
        );

        jTabbedPane17.addTab("tab1", jPanel23);

        jTabbedPane13.addTab("Total Monthly Net Profit", jTabbedPane17);

        jTableMonthlyStock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Brand Code", "Description", "Specification", "Qty Added", "Buy Price", "Sell Price", "Date", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane17.setViewportView(jTableMonthlyStock);

        jTabbedPane13.addTab("Monthly Stock Added", jScrollPane17);

        jButton2.setText("Generate All");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel34.setText("This Month");
        jLabel34.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel34MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(261, 261, 261)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabbedPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 1156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 10, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Monthly Reports", jPanel15);

        jTableAnnualCashSale2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ReceptNo", "Item ", "@Ksh", "Qty", "Amount", "Date", "Time", "Sold By"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane9.setViewportView(jTableAnnualCashSale2);

        jLabel17.setText("Total Cash Sale");

        jTAnnualcashsale2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTAnnualcashsale2.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addGap(390, 390, 390)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(jTAnnualcashsale2, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(402, Short.MAX_VALUE))
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addComponent(jScrollPane9)
                .addContainerGap())
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTAnnualcashsale2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane18.addTab("Annual Cash Sale", jPanel25);

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 9, Short.MAX_VALUE)
        );

        jTtableAnnualCreditSale2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Recept No.", "Total Amount", "Amount Paid", "Balance", "Customer", "Contact", "Date", "Time", "User"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane10.setViewportView(jTtableAnnualCreditSale2);

        jTAnnualcreditSale2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTAnnualcreditSale2.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel18.setText("Total Credit  Given");

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addGap(678, 678, 678)
                .addComponent(jPanel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addGap(310, 310, 310)
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(jTAnnualcreditSale2, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 1151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTAnnualcreditSale2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addComponent(jPanel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane19.addTab("tab1", jPanel26);

        jTabbedPane18.addTab("Annual Credit Sale", jTabbedPane19);

        jTtableAnnualProfit2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Item Sold", "Profit Gained", "Date", "Time", "User"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane11.setViewportView(jTtableAnnualProfit2);

        jTAnnualProfit2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTAnnualProfit2.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel19.setText("Total Day Profit Gained");

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addGap(379, 379, 379)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTAnnualProfit2, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(400, Short.MAX_VALUE))
            .addComponent(jScrollPane11)
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTAnnualProfit2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addComponent(jPanel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane20.addTab("tab1", jPanel28);

        jTabbedPane18.addTab("Annual Total Profit", jTabbedPane20);

        jTableAnnualExpence1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Expence", "Amount", "Date", "Time", "User"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane12.setViewportView(jTableAnnualExpence1);

        jTAnnualExpences2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTAnnualExpences2.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel20.setText("Total Expences ");

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addGap(361, 361, 361)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTAnnualExpences2, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(424, Short.MAX_VALUE))
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addComponent(jScrollPane12)
                .addContainerGap())
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTAnnualExpences2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(126, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane21.addTab("tab1", jPanel30);

        jTabbedPane18.addTab("Total Annual Expences", jTabbedPane21);

        jLabel21.setText("Total Profit Gained");

        jTAnnualprofitGain2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTAnnualprofitGain2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTAnnualprofitGain2.setText("0");

        jLabel22.setText("Total Expence Used");

        jTAnnualExpeUsed2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTAnnualExpeUsed2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTAnnualExpeUsed2.setText("0");

        jLabel23.setText("Net Profit");

        jTAnnualNetProfit2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTAnnualNetProfit2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTAnnualNetProfit2.setText("0");

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel32Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel32Layout.createSequentialGroup()
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(jTAnnualNetProfit2, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel32Layout.createSequentialGroup()
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(59, 59, 59)
                            .addComponent(jTAnnualExpeUsed2, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel32Layout.createSequentialGroup()
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(59, 59, 59)
                            .addComponent(jTAnnualprofitGain2, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(700, Short.MAX_VALUE))
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel32Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTAnnualprofitGain2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTAnnualExpeUsed2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTAnnualNetProfit2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(154, Short.MAX_VALUE))
        );

        jTabbedPane22.addTab("tab1", jPanel32);

        jTabbedPane18.addTab("Total Annual Net Profit", jTabbedPane22);

        jTableAnnualStock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Brand Code", "Description", "Specification", "Qty Added", "Buy Price", "Sell Price", "Date", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane18.setViewportView(jTableAnnualStock);

        jTabbedPane18.addTab("Annual Stock Added", jScrollPane18);

        jButton3.setText("Generate All");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel35.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel35.setText("This Year");
        jLabel35.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel35MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(259, 259, 259)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabbedPane18, javax.swing.GroupLayout.PREFERRED_SIZE, 1150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel24Layout.createSequentialGroup()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 10, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel24Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane18, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Annual Reports", jPanel24);

        Clock.setFont(new java.awt.Font("LcdD", 0, 24)); // NOI18N
        Clock.setForeground(new java.awt.Color(51, 0, 51));
        Clock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Clock.setText("12:12;12 pm");
        Clock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ClockMouseClicked(evt);
            }
        });

        jLDate.setFont(new java.awt.Font("LcdD", 0, 24)); // NOI18N
        jLDate.setForeground(new java.awt.Color(51, 0, 51));
        jLDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLDate.setText("12:12;12 pm");
        jLDate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLDateMouseClicked(evt);
            }
        });

        jLday.setText("Day");

        jLmonth.setText("Month");

        jLyear.setText("year");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Select Date :");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jCday.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jCday.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Day--", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jCmonth.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jCmonth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Month--", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        jCmonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCmonthActionPerformed(evt);
            }
        });

        jCyear.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jCyear.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Year--", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022" }));

        jLabel38.setFont(new java.awt.Font("Viner Hand ITC", 2, 13)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(102, 102, 0));
        jLabel38.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/ProgressRoller.gif"))); // NOI18N
        jLabel38.setText(" Refresh . . . ");
        jLabel38.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel38MouseClicked(evt);
            }
        });

        jLdOy.setText("DoY");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(Clock, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLDate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jCday, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLday))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(jLdOy)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCmonth, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)
                                .addComponent(jCyear, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLmonth)
                                .addGap(18, 18, 18)
                                .addComponent(jLyear))))
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1154, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 6, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(Clock, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLday)
                            .addComponent(jLmonth)
                            .addComponent(jLyear))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLDate, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCmonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel38)
                            .addComponent(jLdOy))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ClockMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ClockMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ClockMouseClicked

    private void jLDateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLDateMouseClicked
        
    }//GEN-LAST:event_jLDateMouseClicked

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
            String day=jLday.getText();
            String month=jLmonth.getText();
            String year=jLyear.getText();
            
           jCday.setSelectedItem(String.valueOf(day));
                      jCmonth.setSelectedItem(String.valueOf(month));
                        jCyear.setSelectedItem(String.valueOf(year));
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jCmonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCmonthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCmonthActionPerformed

    private void jLabel38MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel38MouseClicked
        
        DailyCashSale(); 
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel38MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            GenerateDailyAll();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
            GenerateMonthlyAll();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jLabel16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseClicked
                String day=jLday.getText();
                String month=jLmonth.getText();
                String year=jLyear.getText();
                
                jCday.setSelectedItem(day);
                jCmonth.setSelectedItem(month);
                jCyear.setSelectedItem(year);
    }//GEN-LAST:event_jLabel16MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
                GenerateAnnualAll();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        GenerateWeeklyAll();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jLabel31MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel31MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel31MouseClicked

    private void jCmonth1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCmonth1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCmonth1ActionPerformed

    private void jLabel34MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel34MouseClicked
             String day=jLday.getText();
                String month=jLmonth.getText();
                String year=jLyear.getText();
                
                jCday.setSelectedItem(day);
                jCmonth.setSelectedItem(month);
                jCyear.setSelectedItem(year);    // TODO add your handling code here:
    }//GEN-LAST:event_jLabel34MouseClicked

    private void jLabel35MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel35MouseClicked
        String day=jLday.getText();
                String month=jLmonth.getText();
                String year=jLyear.getText();
                
                jCday.setSelectedItem(day);
                jCmonth.setSelectedItem(month);
                jCyear.setSelectedItem(year);        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel35MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reports().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Clock;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jCday;
    private javax.swing.JComboBox jCdayFrom;
    private javax.swing.JComboBox jCdayTo;
    private javax.swing.JComboBox jCmonth;
    private javax.swing.JComboBox jCmonth1;
    private javax.swing.JComboBox jCyear;
    private javax.swing.JComboBox jCyear1;
    private javax.swing.JLabel jLDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLdOy;
    private javax.swing.JLabel jLday;
    private javax.swing.JLabel jLmonth;
    private javax.swing.JLabel jLyear;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel39;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextField jTAnnualExpeUsed2;
    private javax.swing.JTextField jTAnnualExpences2;
    private javax.swing.JTextField jTAnnualNetProfit2;
    private javax.swing.JTextField jTAnnualProfit2;
    private javax.swing.JTextField jTAnnualcashsale2;
    private javax.swing.JTextField jTAnnualcreditSale2;
    private javax.swing.JTextField jTAnnualprofitGain2;
    private javax.swing.JTable jTDailyCashSale;
    private javax.swing.JTextField jTDayProfit;
    private javax.swing.JTextField jTMonthExpeUsed1;
    private javax.swing.JTextField jTMonthExpences1;
    private javax.swing.JTextField jTMonthNetProfit1;
    private javax.swing.JTextField jTMonthProfit1;
    private javax.swing.JTextField jTMonthcashsale1;
    private javax.swing.JTextField jTMonthcreditSale1;
    private javax.swing.JTextField jTMonthprofitGain1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane10;
    private javax.swing.JTabbedPane jTabbedPane11;
    private javax.swing.JTabbedPane jTabbedPane13;
    private javax.swing.JTabbedPane jTabbedPane14;
    private javax.swing.JTabbedPane jTabbedPane15;
    private javax.swing.JTabbedPane jTabbedPane16;
    private javax.swing.JTabbedPane jTabbedPane17;
    private javax.swing.JTabbedPane jTabbedPane18;
    private javax.swing.JTabbedPane jTabbedPane19;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane20;
    private javax.swing.JTabbedPane jTabbedPane21;
    private javax.swing.JTabbedPane jTabbedPane22;
    private javax.swing.JTabbedPane jTabbedPane23;
    private javax.swing.JTabbedPane jTabbedPane24;
    private javax.swing.JTabbedPane jTabbedPane30;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JTabbedPane jTabbedPane6;
    private javax.swing.JTabbedPane jTabbedPane7;
    private javax.swing.JTabbedPane jTabbedPane8;
    private javax.swing.JTabbedPane jTabbedPane9;
    private javax.swing.JTable jTableAnnualCashSale2;
    private javax.swing.JTable jTableAnnualExpence1;
    private javax.swing.JTable jTableAnnualStock;
    private javax.swing.JTable jTableDayExpence;
    private javax.swing.JTable jTableMonthCashSale1;
    private javax.swing.JTable jTableMonthExpence;
    private javax.swing.JTable jTableMonthlyStock;
    private javax.swing.JTable jTableWeeklyStock;
    private javax.swing.JTable jTableweeklyCashSale1;
    private javax.swing.JTable jTableweeklyExpence1;
    private javax.swing.JTextField jTcashsale;
    private javax.swing.JTextField jTcreditSale;
    private javax.swing.JTextField jTexpeUsed;
    private javax.swing.JTextField jTexpences;
    private javax.swing.JTextField jTnetProfit;
    private javax.swing.JTextField jTprofitGain;
    private javax.swing.JTable jTtableAnnualCreditSale2;
    private javax.swing.JTable jTtableAnnualProfit2;
    private javax.swing.JTable jTtableDailyCreditSale;
    private javax.swing.JTable jTtableDailyProfit;
    private javax.swing.JTable jTtableMonthProfit1;
    private javax.swing.JTable jTtableMonthyCreditSale1;
    private javax.swing.JTable jTtableweeklyCreditSale1;
    private javax.swing.JTable jTtableweeklyProfit1;
    private javax.swing.JTextField jTweeklyProfit1;
    private javax.swing.JTextField jTweeklycashsale1;
    private javax.swing.JTextField jTweeklycreditSale1;
    private javax.swing.JTextField jTweeklyexpeUsed1;
    private javax.swing.JTextField jTweeklyexpences1;
    private javax.swing.JTextField jTweeklynetProfit1;
    private javax.swing.JTextField jTweeklyprofitGain1;
    // End of variables declaration//GEN-END:variables
public void DailyCashSale(){
           DefaultTableModel model = (DefaultTableModel) jTDailyCashSale
                      .getModel();
                model.setRowCount(0);
        Connect connectobj = new Connect();
            conn = connectobj.connectdb();
                
//            String day=jLday.getText();
//            String month=jLmonth.getText();
//            String year=jLyear.getText();
            
             String day=(String)jCday.getSelectedItem();
                      String month=(String)jCmonth.getSelectedItem();
                      String year=(String)jCyear.getSelectedItem();
                      
                      try {
           
            Statement s = conn.createStatement();
            String as = "SELECT SUM(Amount) FROM sold_items WHERE `Day`='"+day+"' AND `Month`='"+month+"' AND `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
               int r = 0;
            int records = 0;
          
            while (rs.next()) {
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
              String  dd=rs.getString("Sum(Amount)");
               jTcashsale.setText(dd);             
                
                r++;
            }
            
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                      
                    
                try {
            
            Statement s = conn.createStatement();
            String as = "SELECT * FROM `sold_items` WHERE `Day`='"+day+"' AND `Month`='"+month+"' AND `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
            //pst=conn.prepareStatement(as);
            //rs=pst.executeQuery();
            int r = 0;
            int records = 0;
            while (rs.next()) {
                int dd=jTDailyCashSale.getRowCount()+1;                
            //    DefaultTableModel model = (DefaultTableModel) jTDailyCashSale.getModel();
                model.setRowCount(dd);
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
                jTDailyCashSale.setValueAt(rs.getString("Receipt_No"), r, 0);
                 jTDailyCashSale.setValueAt(rs.getString("Item"), r, 1);
                  jTDailyCashSale.setValueAt(rs.getString("Unit_Price"), r, 2);
                   jTDailyCashSale.setValueAt(rs.getString("Quantity"), r, 3);
                    jTDailyCashSale.setValueAt(rs.getString("Amount"), r, 4);
                    jTDailyCashSale.setValueAt(rs.getString("Date"), r, 5);
                    jTDailyCashSale.setValueAt(rs.getString("Time"), r, 6);
                     jTDailyCashSale.setValueAt(rs.getString("Sold_By"), r, 7);
                
                

                r++;

            }
            
          
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                
                     
}
public void DailyCreditSale(){
             DefaultTableModel model = (DefaultTableModel) jTtableDailyCreditSale
                      .getModel();
                model.setRowCount(0);          
        Connect connectobj = new Connect();
            conn = connectobj.connectdb();
                
//            String day=jLday.getText();
//            String month=jLmonth.getText();
//            String year=jLyear.getText();
            
             String day=(String)jCday.getSelectedItem();
                      String month=(String)jCmonth.getSelectedItem();
                      String year=(String)jCyear.getSelectedItem();
                      
                      try {
           
            Statement s = conn.createStatement();
            String as = "SELECT SUM(Balance) FROM credits WHERE `Day`='"+day+"' AND `Month`='"+month+"' AND `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
               int r = 0;
            int records = 0;
          
            while (rs.next()) {
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
              String  dd=rs.getString("Sum(Balance)");
               jTcreditSale.setText(dd);             
                
                r++;
            }
            
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                      
                    
                try {
            
            Statement s = conn.createStatement();
            String as = "SELECT * FROM `credits` WHERE `Day`='"+day+"' AND `Month`='"+month+"' AND `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
            //pst=conn.prepareStatement(as);
            //rs=pst.executeQuery();
            int r = 0;
            int records = 0;
            while (rs.next()) {
                int dd=jTtableDailyCreditSale.getRowCount()+1;                
             //   DefaultTableModel model = (DefaultTableModel) jTtableDailyCreditSale.getModel();
                model.setRowCount(dd);
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
                jTtableDailyCreditSale.setValueAt(rs.getString("Receipt_No"), r, 0);
                 jTtableDailyCreditSale.setValueAt(rs.getString("Total_Amount"), r, 1);
                  jTtableDailyCreditSale.setValueAt(rs.getString("Amount_Paid"), r, 2);
                   jTtableDailyCreditSale.setValueAt(rs.getString("Balance"), r, 3);
                    jTtableDailyCreditSale.setValueAt(rs.getString("Customer"), r, 4);
                     jTtableDailyCreditSale.setValueAt(rs.getString("Phone_No"), r, 5);
                     jTtableDailyCreditSale.setValueAt(rs.getString("Date"), r, 6);
                    jTtableDailyCreditSale.setValueAt(rs.getString("Time"), r, 7);
                     jTtableDailyCreditSale.setValueAt(rs.getString("Sold_By"), r, 8);
                
                

                r++;

            }
            
          
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                
                     
}
public void DailyProfit(){
    DefaultTableModel model = (DefaultTableModel) jTtableDailyProfit
                      .getModel();
                model.setRowCount(0);  
        Connect connectobj = new Connect();
            conn = connectobj.connectdb();
                
//            String day=jLday.getText();
//            String month=jLmonth.getText();
//            String year=jLyear.getText();
            
             String day=(String)jCday.getSelectedItem();
                      String month=(String)jCmonth.getSelectedItem();
                      String year=(String)jCyear.getSelectedItem();
                      
                      try {
           
            Statement s = conn.createStatement();
            String as = "SELECT SUM(Profit) FROM profit_table WHERE `Day`='"+day+"' AND `Month`='"+month+"' AND `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
               int r = 0;
            int records = 0;
          
            while (rs.next()) {
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
              String  dd=rs.getString("Sum(Profit)");
               jTDayProfit.setText(dd);
               jTprofitGain.setText(dd);
                
                r++;
            }
            
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                      
                    
                try {
            
            Statement s = conn.createStatement();
            String as = "SELECT * FROM `profit_table` WHERE `Day`='"+day+"' AND `Month`='"+month+"' AND `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
            //pst=conn.prepareStatement(as);
            //rs=pst.executeQuery();
            int r = 0;
            int records = 0;
            while (rs.next()) {
                int dd=jTtableDailyProfit.getRowCount()+1;                
                //DefaultTableModel model = (DefaultTableModel) jTtableDailyProfit.getModel();
                model.setRowCount(dd);
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
                jTtableDailyProfit.setValueAt(rs.getString("Description"), r, 0);
                 jTtableDailyProfit.setValueAt(rs.getString("Profit"), r, 1);
                  jTtableDailyProfit.setValueAt(rs.getString("Date"), r, 2);
                   jTtableDailyProfit.setValueAt(rs.getString("Time"), r, 3);
                    jTtableDailyProfit.setValueAt(rs.getString("User"), r, 4);
                     r++;
            }           
          
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                
                     
}
public void DailyExpences(){
      DefaultTableModel model = (DefaultTableModel) jTableDayExpence
                      .getModel();
                model.setRowCount(0);  
        Connect connectobj = new Connect();
            conn = connectobj.connectdb();
                
//            String day=jLday.getText();
//            String month=jLmonth.getText();
//            String year=jLyear.getText();
            
             String day=(String)jCday.getSelectedItem();
                      String month=(String)jCmonth.getSelectedItem();
                      String year=(String)jCyear.getSelectedItem();
                      
                      try {
           
            Statement s = conn.createStatement();
            String as = "SELECT SUM(Amount) FROM expences WHERE `Day`='"+day+"' AND `Month`='"+month+"' AND `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
               int r = 0;
            int records = 0;
          
            while (rs.next()) {
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
              String  dd=rs.getString("Sum(Amount)");
               jTexpences.setText(dd);
               jTexpeUsed.setText(dd);
                
                r++;
            }
            
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                      
                    
                try {
            
            Statement s = conn.createStatement();
            String as = "SELECT * FROM `expences` WHERE `Day`='"+day+"' AND `Month`='"+month+"' AND `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
            //pst=conn.prepareStatement(as);
            //rs=pst.executeQuery();
            int r = 0;
            int records = 0;
            while (rs.next()) {
                int dd=jTableDayExpence.getRowCount()+1;                
              //  DefaultTableModel model = (DefaultTableModel) jTableDayExpence.getModel();
                model.setRowCount(dd);
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
                jTableDayExpence.setValueAt(rs.getString("Expence"), r, 0);
                 jTableDayExpence.setValueAt(rs.getString("Amount"), r, 1);
                  jTableDayExpence.setValueAt(rs.getString("Date"), r, 2);
                   jTableDayExpence.setValueAt(rs.getString("Time"), r, 3);
                    jTableDayExpence.setValueAt(rs.getString("User"), r, 4);
                     r++;
            }           
          
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                
                     
}
public void GenerateDailyAll(){
    DailyCashSale();
    DailyCreditSale();
    DailyProfit();
    DailyExpences();
    
    int amnt=Integer.parseInt(jTprofitGain.getText());
    int expe=Integer.parseInt(jTexpeUsed.getText());
    int net=amnt-expe;
    jTnetProfit.setText(String.valueOf(net));


}


public void WeeklyCashSale(){
           DefaultTableModel model = (DefaultTableModel) jTableweeklyCashSale1
                      .getModel();
                model.setRowCount(0);
        Connect connectobj = new Connect();
            conn = connectobj.connectdb();
                
//            String day=jLday.getText();
//            String month=jLmonth.getText();
//            String year=jLyear.getText();
            
//             String day=(String)jCday.getSelectedItem();
//                      String month=(String)jCmonth.getSelectedItem();
//                      String year=(String)jCyear.getSelectedItem();
            
            String dayfrom=(String)jCdayFrom.getSelectedItem();
            String dayto=(String)jCdayTo.getSelectedItem();
                      String month=(String)jCmonth1.getSelectedItem();
                      String year=(String)jCyear1.getSelectedItem();
                      
                      
                      try {
           
            Statement s = conn.createStatement();
            String as = "SELECT SUM(Amount) FROM sold_items WHERE  `Day` BETWEEN '"+dayfrom+"' AND '"+dayto+"' AND `Month`='"+month+"' AND `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
               int r = 0;
            int records = 0;
          
            while (rs.next()) {
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
              String  dd=rs.getString("Sum(Amount)");
               jTweeklycashsale1.setText(dd);             
                
                r++;
            }
            
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                      
                    
                try {
            
            Statement s = conn.createStatement();
            String as = "SELECT * FROM `sold_items` WHERE `Day` BETWEEN '"+dayfrom+"' AND '"+dayto+"' AND `Month`='"+month+"' AND `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
            //pst=conn.prepareStatement(as);
            //rs=pst.executeQuery();
            int r = 0;
            int records = 0;
            while (rs.next()) {
                int dd=jTableweeklyCashSale1.getRowCount()+1;                
            //    DefaultTableModel model = (DefaultTableModel) jTDailyCashSale.getModel();
                model.setRowCount(dd);
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
                jTableweeklyCashSale1.setValueAt(rs.getString("Receipt_No"), r, 0);
                 jTableweeklyCashSale1.setValueAt(rs.getString("Item"), r, 1);
                  jTableweeklyCashSale1.setValueAt(rs.getString("Unit_Price"), r, 2);
                   jTableweeklyCashSale1.setValueAt(rs.getString("Quantity"), r, 3);
                    jTableweeklyCashSale1.setValueAt(rs.getString("Amount"), r, 4);
                    jTableweeklyCashSale1.setValueAt(rs.getString("Date"), r, 5);
                    jTableweeklyCashSale1.setValueAt(rs.getString("Time"), r, 6);
                     jTableweeklyCashSale1.setValueAt(rs.getString("Sold_By"), r, 7);
                
                

                r++;

            }
            
          
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                
                     
}
public void WeeklyCreditSale(){
             DefaultTableModel model = (DefaultTableModel) jTtableweeklyCreditSale1
                      .getModel();
                model.setRowCount(0);          
        Connect connectobj = new Connect();
            conn = connectobj.connectdb();
                
//            String day=jLday.getText();
//            String month=jLmonth.getText();
//            String year=jLyear.getText();
            
             String dayfrom=(String)jCdayFrom.getSelectedItem();
            String dayto=(String)jCdayTo.getSelectedItem();
                      String month=(String)jCmonth1.getSelectedItem();
                      String year=(String)jCyear1.getSelectedItem();
                      
                      try {
           
            Statement s = conn.createStatement();
            String as = "SELECT SUM(Balance) FROM credits WHERE `Day` BETWEEN '"+dayfrom+"' AND '"+dayto+"' AND `Month`='"+month+"' AND `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
               int r = 0;
            int records = 0;
          
            while (rs.next()) {
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
              String  dd=rs.getString("Sum(Balance)");
               jTweeklycreditSale1.setText(dd);             
                
                r++;
            }
            
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                      
                    
                try {
            
            Statement s = conn.createStatement();
            String as = "SELECT * FROM `credits` WHERE `Day` BETWEEN '"+dayfrom+"' AND '"+dayto+"' AND `Month`='"+month+"' AND `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
            //pst=conn.prepareStatement(as);
            //rs=pst.executeQuery();
            int r = 0;
            int records = 0;
            while (rs.next()) {
                int dd=jTtableweeklyCreditSale1.getRowCount()+1;                
             //   DefaultTableModel model = (DefaultTableModel) jTtableDailyCreditSale.getModel();
                model.setRowCount(dd);
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
                jTtableweeklyCreditSale1.setValueAt(rs.getString("Receipt_No"), r, 0);
                 jTtableweeklyCreditSale1.setValueAt(rs.getString("Total_Amount"), r, 1);
                  jTtableweeklyCreditSale1.setValueAt(rs.getString("Amount_Paid"), r, 2);
                   jTtableweeklyCreditSale1.setValueAt(rs.getString("Balance"), r, 3);
                    jTtableweeklyCreditSale1.setValueAt(rs.getString("Customer"), r, 4);
                     jTtableweeklyCreditSale1.setValueAt(rs.getString("Phone_No"), r, 5);
                     jTtableweeklyCreditSale1.setValueAt(rs.getString("Date"), r, 6);
                    jTtableweeklyCreditSale1.setValueAt(rs.getString("Time"), r, 7);
                     jTtableweeklyCreditSale1.setValueAt(rs.getString("Sold_By"), r, 8);
                
                

                r++;

            }
            
          
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                
                     
}
public void WeeklyProfit(){
    DefaultTableModel model = (DefaultTableModel) jTtableweeklyProfit1
                      .getModel();
                model.setRowCount(0);  
        Connect connectobj = new Connect();
            conn = connectobj.connectdb();
                
//            String day=jLday.getText();
//            String month=jLmonth.getText();
//            String year=jLyear.getText();
            
             String dayfrom=(String)jCdayFrom.getSelectedItem();
            String dayto=(String)jCdayTo.getSelectedItem();
                      String month=(String)jCmonth1.getSelectedItem();
                      String year=(String)jCyear1.getSelectedItem();
                      try {
           
            Statement s = conn.createStatement();
            String as = "SELECT SUM(Profit) FROM profit_table WHERE `Day` BETWEEN '"+dayfrom+"' AND '"+dayto+"' AND `Month`='"+month+"' AND `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
               int r = 0;
            int records = 0;
          
            while (rs.next()) {
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
              String  dd=rs.getString("Sum(Profit)");
               jTweeklyProfit1.setText(dd);
               jTweeklyprofitGain1.setText(dd);
                
                r++;
            }
            
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                      
                    
                try {
            
            Statement s = conn.createStatement();
            String as = "SELECT * FROM `profit_table` WHERE `Day` BETWEEN '"+dayfrom+"' AND '"+dayto+"' AND `Month`='"+month+"' AND `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
            //pst=conn.prepareStatement(as);
            //rs=pst.executeQuery();
            int r = 0;
            int records = 0;
            while (rs.next()) {
                int dd=jTtableweeklyProfit1.getRowCount()+1;                
                //DefaultTableModel model = (DefaultTableModel) jTtableDailyProfit.getModel();
                model.setRowCount(dd);
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
                jTtableweeklyProfit1.setValueAt(rs.getString("Description"), r, 0);
                 jTtableweeklyProfit1.setValueAt(rs.getString("Profit"), r, 1);
                  jTtableweeklyProfit1.setValueAt(rs.getString("Date"), r, 2);
                   jTtableweeklyProfit1.setValueAt(rs.getString("Time"), r, 3);
                    jTtableweeklyProfit1.setValueAt(rs.getString("User"), r, 4);
                     r++;
            }           
          
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                
                     
}
public void WeeklyExpences(){
      DefaultTableModel model = (DefaultTableModel) jTableweeklyExpence1
                      .getModel();
                model.setRowCount(0);  
        Connect connectobj = new Connect();
            conn = connectobj.connectdb();
                
//            String day=jLday.getText();
//            String month=jLmonth.getText();
//            String year=jLyear.getText();
            
            String dayfrom=(String)jCdayFrom.getSelectedItem();
            String dayto=(String)jCdayTo.getSelectedItem();
                      String month=(String)jCmonth1.getSelectedItem();
                      String year=(String)jCyear1.getSelectedItem();
                      
                      try {
           
            Statement s = conn.createStatement();
            String as = "SELECT SUM(Amount) FROM expences WHERE `Day` BETWEEN '"+dayfrom+"' AND '"+dayto+"' AND `Month`='"+month+"' AND `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
               int r = 0;
            int records = 0;
          
            while (rs.next()) {
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
              String  dd=rs.getString("Sum(Amount)");
               jTweeklyexpences1.setText(dd);
               jTweeklyexpeUsed1.setText(dd);
                
                r++;
            }
            
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                      
                    
                try {
            
            Statement s = conn.createStatement();
            String as = "SELECT * FROM `expences` WHERE `Day` BETWEEN '"+dayfrom+"' AND '"+dayto+"' AND `Month`='"+month+"' AND `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
            //pst=conn.prepareStatement(as);
            //rs=pst.executeQuery();
            int r = 0;
            int records = 0;
            while (rs.next()) {
                int dd=jTableweeklyExpence1.getRowCount()+1;                
              //  DefaultTableModel model = (DefaultTableModel) jTableDayExpence.getModel();
                model.setRowCount(dd);
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
                jTableweeklyExpence1.setValueAt(rs.getString("Expence"), r, 0);
                 jTableweeklyExpence1.setValueAt(rs.getString("Amount"), r, 1);
                  jTableweeklyExpence1.setValueAt(rs.getString("Date"), r, 2);
                   jTableweeklyExpence1.setValueAt(rs.getString("Time"), r, 3);
                    jTableweeklyExpence1.setValueAt(rs.getString("User"), r, 4);
                     r++;
            }           
          
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                
                     
}
public void WeeklyStock(){
           DefaultTableModel model = (DefaultTableModel) jTableWeeklyStock
                      .getModel();
                model.setRowCount(0);
        Connect connectobj = new Connect();
            conn = connectobj.connectdb();
   
             String dayfrom=(String)jCdayFrom.getSelectedItem();
            String dayto=(String)jCdayTo.getSelectedItem();
                      String month=(String)jCmonth1.getSelectedItem();
                      String year=(String)jCyear1.getSelectedItem();
                   
                try {
            
            Statement s = conn.createStatement();
            String as = "SELECT * FROM `added_stock` WHERE `Day` BETWEEN '"+dayfrom+"' AND '"+dayto+"' AND  `Month`='"+month+"' AND `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
            //pst=conn.prepareStatement(as);
            //rs=pst.executeQuery();
            int r = 0;
            int records = 0;
            while (rs.next()) {
                int dd=jTableWeeklyStock.getRowCount()+1;                
            //    DefaultTableModel model = (DefaultTableModel) jTDailyCashSale.getModel();
                model.setRowCount(dd);
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
                jTableWeeklyStock.setValueAt(rs.getString("Brand_Code"), r, 0);
                 jTableWeeklyStock.setValueAt(rs.getString("Description"), r, 1);
                  jTableWeeklyStock.setValueAt(rs.getString("Specification"), r, 2);
                   jTableWeeklyStock.setValueAt(rs.getString("Quantity"), r, 3);
                    jTableWeeklyStock.setValueAt(rs.getString("Buying_Price"), r, 4);
                    jTableWeeklyStock.setValueAt(rs.getString("Selling_Price"), r, 5);
                    jTableWeeklyStock.setValueAt(rs.getString("Date"), r, 6);
                     jTableWeeklyStock.setValueAt(rs.getString("Time"), r, 7);
                
                

                r++;

            }
            
          
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                
                     
}
public void GenerateWeeklyAll(){
    WeeklyCashSale();
    WeeklyCreditSale();
    WeeklyProfit();
    WeeklyExpences();
    WeeklyStock();
    
    int amnt=Integer.parseInt(jTweeklyprofitGain1.getText());
    int expe=Integer.parseInt(jTweeklyexpeUsed1.getText());
    int net=amnt-expe;
    jTweeklynetProfit1.setText(String.valueOf(net));


}


public void MonthlyCashSale(){
           DefaultTableModel model = (DefaultTableModel) jTableMonthCashSale1
                      .getModel();
                model.setRowCount(0);
        Connect connectobj = new Connect();
            conn = connectobj.connectdb();
                
//            String day=jLday.getText();
//            String month=jLmonth.getText();
//            String year=jLyear.getText();
            
             String day=(String)jCday.getSelectedItem();
                      String month=(String)jCmonth.getSelectedItem();
                      String year=(String)jCyear.getSelectedItem();
                      
                      try {
           
            Statement s = conn.createStatement();
            String as = "SELECT SUM(Amount) FROM sold_items WHERE  `Month`='"+month+"' AND `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
               int r = 0;
            int records = 0;
          
            while (rs.next()) {
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
              String  dd=rs.getString("Sum(Amount)");
               jTMonthcashsale1.setText(dd);             
                
                r++;
            }
            
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                      
                    
                try {
            
            Statement s = conn.createStatement();
            String as = "SELECT * FROM `sold_items` WHERE `Month`='"+month+"' AND `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
            //pst=conn.prepareStatement(as);
            //rs=pst.executeQuery();
            int r = 0;
            int records = 0;
            while (rs.next()) {
                int dd=jTableMonthCashSale1.getRowCount()+1;                
            //    DefaultTableModel model = (DefaultTableModel) jTDailyCashSale.getModel();
                model.setRowCount(dd);
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
                jTableMonthCashSale1.setValueAt(rs.getString("Receipt_No"), r, 0);
                 jTableMonthCashSale1.setValueAt(rs.getString("Item"), r, 1);
                  jTableMonthCashSale1.setValueAt(rs.getString("Unit_Price"), r, 2);
                   jTableMonthCashSale1.setValueAt(rs.getString("Quantity"), r, 3);
                    jTableMonthCashSale1.setValueAt(rs.getString("Amount"), r, 4);
                    jTableMonthCashSale1.setValueAt(rs.getString("Date"), r, 5);
                    jTableMonthCashSale1.setValueAt(rs.getString("Time"), r, 6);
                     jTableMonthCashSale1.setValueAt(rs.getString("Sold_By"), r, 7);
                
                

                r++;

            }
            
          
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                
                     
}
public void MonthlyCreditSale(){
             DefaultTableModel model = (DefaultTableModel) jTtableMonthyCreditSale1
                      .getModel();
                model.setRowCount(0);          
        Connect connectobj = new Connect();
            conn = connectobj.connectdb();
                
//            String day=jLday.getText();
//            String month=jLmonth.getText();
//            String year=jLyear.getText();
            
             String day=(String)jCday.getSelectedItem();
                      String month=(String)jCmonth.getSelectedItem();
                      String year=(String)jCyear.getSelectedItem();
                      
                      try {
           
            Statement s = conn.createStatement();
            String as = "SELECT SUM(Balance) FROM credits WHERE `Month`='"+month+"' AND `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
               int r = 0;
            int records = 0;
          
            while (rs.next()) {
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
              String  dd=rs.getString("Sum(Balance)");
               jTMonthcreditSale1.setText(dd);             
                
                r++;
            }
            
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                      
                    
                try {
            
            Statement s = conn.createStatement();
            String as = "SELECT * FROM `credits` WHERE  `Month`='"+month+"' AND `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
            //pst=conn.prepareStatement(as);
            //rs=pst.executeQuery();
            int r = 0;
            int records = 0;
            while (rs.next()) {
                int dd=jTtableMonthyCreditSale1.getRowCount()+1;                
             //   DefaultTableModel model = (DefaultTableModel) jTtableDailyCreditSale.getModel();
                model.setRowCount(dd);
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
                jTtableMonthyCreditSale1.setValueAt(rs.getString("Receipt_No"), r, 0);
                 jTtableMonthyCreditSale1.setValueAt(rs.getString("Total_Amount"), r, 1);
                  jTtableMonthyCreditSale1.setValueAt(rs.getString("Amount_Paid"), r, 2);
                   jTtableMonthyCreditSale1.setValueAt(rs.getString("Balance"), r, 3);
                    jTtableMonthyCreditSale1.setValueAt(rs.getString("Customer"), r, 4);
                     jTtableMonthyCreditSale1.setValueAt(rs.getString("Phone_No"), r, 5);
                     jTtableMonthyCreditSale1.setValueAt(rs.getString("Date"), r, 6);
                    jTtableMonthyCreditSale1.setValueAt(rs.getString("Time"), r, 7);
                     jTtableMonthyCreditSale1.setValueAt(rs.getString("Sold_By"), r, 8);
                
                

                r++;

            }
            
          
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                
                     
}
public void MonthlyProfit(){
    DefaultTableModel model = (DefaultTableModel) jTtableMonthProfit1
                      .getModel();
                model.setRowCount(0);  
        Connect connectobj = new Connect();
            conn = connectobj.connectdb();
                
//            String day=jLday.getText();
//            String month=jLmonth.getText();
//            String year=jLyear.getText();
            
             String day=(String)jCday.getSelectedItem();
                      String month=(String)jCmonth.getSelectedItem();
                      String year=(String)jCyear.getSelectedItem();
                      
                      try {
           
            Statement s = conn.createStatement();
            String as = "SELECT SUM(Profit) FROM profit_table WHERE `Month`='"+month+"' AND `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
               int r = 0;
            int records = 0;
          
            while (rs.next()) {
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
              String  dd=rs.getString("Sum(Profit)");
               jTMonthProfit1.setText(dd);
               jTMonthprofitGain1.setText(dd);
                
                r++;
            }
            
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                      
                    
                try {
            
            Statement s = conn.createStatement();
            String as = "SELECT * FROM `profit_table` WHERE `Month`='"+month+"' AND `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
            //pst=conn.prepareStatement(as);
            //rs=pst.executeQuery();
            int r = 0;
            int records = 0;
            while (rs.next()) {
                int dd=jTtableMonthProfit1.getRowCount()+1;                
                //DefaultTableModel model = (DefaultTableModel) jTtableDailyProfit.getModel();
                model.setRowCount(dd);
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
                jTtableMonthProfit1.setValueAt(rs.getString("Description"), r, 0);
                 jTtableMonthProfit1.setValueAt(rs.getString("Profit"), r, 1);
                  jTtableMonthProfit1.setValueAt(rs.getString("Date"), r, 2);
                   jTtableMonthProfit1.setValueAt(rs.getString("Time"), r, 3);
                    jTtableMonthProfit1.setValueAt(rs.getString("User"), r, 4);
                     r++;
            }           
          
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                
                     
}
public void MonthlyExpences(){
      DefaultTableModel model = (DefaultTableModel) jTableMonthExpence
                      .getModel();
                model.setRowCount(0);  
        Connect connectobj = new Connect();
            conn = connectobj.connectdb();
                
//            String day=jLday.getText();
//            String month=jLmonth.getText();
//            String year=jLyear.getText();
            
             String day=(String)jCday.getSelectedItem();
                      String month=(String)jCmonth.getSelectedItem();
                      String year=(String)jCyear.getSelectedItem();
                      
                      try {
           
            Statement s = conn.createStatement();
            String as = "SELECT SUM(Amount) FROM expences WHERE `Month`='"+month+"' AND `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
               int r = 0;
            int records = 0;
          
            while (rs.next()) {
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
              String  dd=rs.getString("Sum(Amount)");
               jTMonthExpences1.setText(dd);
               jTMonthExpeUsed1.setText(dd);
                
                r++;
            }
            
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                      
                    
                try {
            
            Statement s = conn.createStatement();
            String as = "SELECT * FROM `expences` WHERE `Month`='"+month+"' AND `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
            //pst=conn.prepareStatement(as);
            //rs=pst.executeQuery();
            int r = 0;
            int records = 0;
            while (rs.next()) {
                int dd=jTableMonthExpence.getRowCount()+1;                
              //  DefaultTableModel model = (DefaultTableModel) jTableDayExpence.getModel();
                model.setRowCount(dd);
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
                jTableMonthExpence.setValueAt(rs.getString("Expence"), r, 0);
                 jTableMonthExpence.setValueAt(rs.getString("Amount"), r, 1);
                  jTableMonthExpence.setValueAt(rs.getString("Date"), r, 2);
                   jTableMonthExpence.setValueAt(rs.getString("Time"), r, 3);
                    jTableMonthExpence.setValueAt(rs.getString("User"), r, 4);
                     r++;
            }           
          
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                
                     
}
public void MonthlyStock(){
           DefaultTableModel model = (DefaultTableModel) jTableMonthlyStock
                      .getModel();
                model.setRowCount(0);
        Connect connectobj = new Connect();
            conn = connectobj.connectdb();
                
//            String day=jLday.getText();
//            String month=jLmonth.getText();
//            String year=jLyear.getText();
            
             String day=(String)jCday.getSelectedItem();
                      String month=(String)jCmonth.getSelectedItem();
                      String year=(String)jCyear.getSelectedItem();
                   
                try {
            
            Statement s = conn.createStatement();
            String as = "SELECT * FROM `added_stock` WHERE `Month`='"+month+"' AND `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
            //pst=conn.prepareStatement(as);
            //rs=pst.executeQuery();
            int r = 0;
            int records = 0;
            while (rs.next()) {
                int dd=jTableMonthlyStock.getRowCount()+1;                
            //    DefaultTableModel model = (DefaultTableModel) jTDailyCashSale.getModel();
                model.setRowCount(dd);
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
                jTableMonthlyStock.setValueAt(rs.getString("Brand_Code"), r, 0);
                 jTableMonthlyStock.setValueAt(rs.getString("Description"), r, 1);
                  jTableMonthlyStock.setValueAt(rs.getString("Specification"), r, 2);
                   jTableMonthlyStock.setValueAt(rs.getString("Quantity"), r, 3);
                    jTableMonthlyStock.setValueAt(rs.getString("Buying_Price"), r, 4);
                    jTableMonthlyStock.setValueAt(rs.getString("Selling_Price"), r, 5);
                    jTableMonthlyStock.setValueAt(rs.getString("Date"), r, 6);
                     jTableMonthlyStock.setValueAt(rs.getString("Time"), r, 7);
                
                

                r++;

            }
            
          
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                
                     
}
public void GenerateMonthlyAll(){
    MonthlyCashSale();
    MonthlyCreditSale();
    MonthlyProfit();
    MonthlyExpences();
    MonthlyStock();
    
    int amnt=Integer.parseInt(jTMonthprofitGain1.getText());
    int expe=Integer.parseInt(jTMonthExpeUsed1.getText());
    int net=amnt-expe;
    jTMonthNetProfit1.setText(String.valueOf(net));


}



public void AnnualCashSale(){
           DefaultTableModel model = (DefaultTableModel) jTableAnnualCashSale2
                      .getModel();
                model.setRowCount(0);
        Connect connectobj = new Connect();
            conn = connectobj.connectdb();
                
//            String day=jLday.getText();
//            String month=jLmonth.getText();
//            String year=jLyear.getText();
            
             String day=(String)jCday.getSelectedItem();
                      String month=(String)jCmonth.getSelectedItem();
                      String year=(String)jCyear.getSelectedItem();
                      
                      try {
           
            Statement s = conn.createStatement();
            String as = "SELECT SUM(Amount) FROM sold_items WHERE  `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
               int r = 0;
            int records = 0;
          
            while (rs.next()) {
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
              String  dd=rs.getString("Sum(Amount)");
               jTAnnualcashsale2.setText(dd);             
                
                r++;
            }
            
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                      
                    
                try {
            
            Statement s = conn.createStatement();
            String as = "SELECT * FROM `sold_items` WHERE  `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
            //pst=conn.prepareStatement(as);
            //rs=pst.executeQuery();
            int r = 0;
            int records = 0;
            while (rs.next()) {
                int dd=jTableAnnualCashSale2.getRowCount()+1;                
            //    DefaultTableModel model = (DefaultTableModel) jTDailyCashSale.getModel();
                model.setRowCount(dd);
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
                jTableAnnualCashSale2.setValueAt(rs.getString("Receipt_No"), r, 0);
                 jTableAnnualCashSale2.setValueAt(rs.getString("Item"), r, 1);
                  jTableAnnualCashSale2.setValueAt(rs.getString("Unit_Price"), r, 2);
                   jTableAnnualCashSale2.setValueAt(rs.getString("Quantity"), r, 3);
                    jTableAnnualCashSale2.setValueAt(rs.getString("Amount"), r, 4);
                    jTableAnnualCashSale2.setValueAt(rs.getString("Date"), r, 5);
                    jTableAnnualCashSale2.setValueAt(rs.getString("Time"), r, 6);
                     jTableAnnualCashSale2.setValueAt(rs.getString("Sold_By"), r, 7);
                
                

                r++;

            }
            
          
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                
                     
}
public void AnnualCreditSale(){
             DefaultTableModel model = (DefaultTableModel) jTtableAnnualCreditSale2
                      .getModel();
                model.setRowCount(0);          
        Connect connectobj = new Connect();
            conn = connectobj.connectdb();
                
//            String day=jLday.getText();
//            String month=jLmonth.getText();
//            String year=jLyear.getText();
            
             String day=(String)jCday.getSelectedItem();
                      String month=(String)jCmonth.getSelectedItem();
                      String year=(String)jCyear.getSelectedItem();
                      
                      try {
           
            Statement s = conn.createStatement();
            String as = "SELECT SUM(Balance) FROM credits WHERE  `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
               int r = 0;
            int records = 0;
          
            while (rs.next()) {
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
              String  dd=rs.getString("Sum(Balance)");
               jTAnnualcreditSale2.setText(dd);             
                
                r++;
            }
            
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                      
                    
                try {
            
            Statement s = conn.createStatement();
            String as = "SELECT * FROM `credits` WHERE  `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
            //pst=conn.prepareStatement(as);
            //rs=pst.executeQuery();
            int r = 0;
            int records = 0;
            while (rs.next()) {
                int dd=jTtableAnnualCreditSale2.getRowCount()+1;                
             //   DefaultTableModel model = (DefaultTableModel) jTtableDailyCreditSale.getModel();
                model.setRowCount(dd);
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
                jTtableAnnualCreditSale2.setValueAt(rs.getString("Receipt_No"), r, 0);
                 jTtableAnnualCreditSale2.setValueAt(rs.getString("Total_Amount"), r, 1);
                  jTtableAnnualCreditSale2.setValueAt(rs.getString("Amount_Paid"), r, 2);
                   jTtableAnnualCreditSale2.setValueAt(rs.getString("Balance"), r, 3);
                    jTtableAnnualCreditSale2.setValueAt(rs.getString("Customer"), r, 4);
                     jTtableAnnualCreditSale2.setValueAt(rs.getString("Phone_No"), r, 5);
                     jTtableAnnualCreditSale2.setValueAt(rs.getString("Date"), r, 6);
                    jTtableAnnualCreditSale2.setValueAt(rs.getString("Time"), r, 7);
                     jTtableAnnualCreditSale2.setValueAt(rs.getString("Sold_By"), r, 8);
                
                

                r++;

            }
            
          
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                
                     
}
public void AnnualProfit(){
    DefaultTableModel model = (DefaultTableModel) jTtableAnnualProfit2
                      .getModel();
                model.setRowCount(0);  
        Connect connectobj = new Connect();
            conn = connectobj.connectdb();
                
//            String day=jLday.getText();
//            String month=jLmonth.getText();
//            String year=jLyear.getText();
            
             String day=(String)jCday.getSelectedItem();
                      String month=(String)jCmonth.getSelectedItem();
                      String year=(String)jCyear.getSelectedItem();
                      
                      try {
           
            Statement s = conn.createStatement();
            String as = "SELECT SUM(Profit) FROM profit_table WHERE `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
               int r = 0;
            int records = 0;
          
            while (rs.next()) {
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
              String  dd=rs.getString("Sum(Profit)");
               jTAnnualProfit2.setText(dd);
               jTAnnualprofitGain2.setText(dd);
                
                r++;
            }
            
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                      
                    
                try {
            
            Statement s = conn.createStatement();
            String as = "SELECT * FROM `profit_table` WHERE `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
            //pst=conn.prepareStatement(as);
            //rs=pst.executeQuery();
            int r = 0;
            int records = 0;
            while (rs.next()) {
                int dd=jTtableAnnualProfit2.getRowCount()+1;                
                //DefaultTableModel model = (DefaultTableModel) jTtableDailyProfit.getModel();
                model.setRowCount(dd);
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
                jTtableAnnualProfit2.setValueAt(rs.getString("Description"), r, 0);
                 jTtableAnnualProfit2.setValueAt(rs.getString("Profit"), r, 1);
                  jTtableAnnualProfit2.setValueAt(rs.getString("Date"), r, 2);
                   jTtableAnnualProfit2.setValueAt(rs.getString("Time"), r, 3);
                    jTtableAnnualProfit2.setValueAt(rs.getString("User"), r, 4);
                     r++;
            }           
          
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                
                     
}
public void AnnualExpences(){
      DefaultTableModel model = (DefaultTableModel) jTableAnnualExpence1
                      .getModel();
                model.setRowCount(0);  
        Connect connectobj = new Connect();
            conn = connectobj.connectdb();
                
//            String day=jLday.getText();
//            String month=jLmonth.getText();
//            String year=jLyear.getText();
            
             String day=(String)jCday.getSelectedItem();
                      String month=(String)jCmonth.getSelectedItem();
                      String year=(String)jCyear.getSelectedItem();
                      
                      try {
           
            Statement s = conn.createStatement();
            String as = "SELECT SUM(Amount) FROM expences WHERE  `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
               int r = 0;
            int records = 0;
          
            while (rs.next()) {
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
              String  dd=rs.getString("Sum(Amount)");
               jTAnnualExpences2.setText(dd);
               jTAnnualExpeUsed2.setText(dd);
                
                r++;
            }
            
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                      
                    
                try {
            
            Statement s = conn.createStatement();
            String as = "SELECT * FROM `expences` WHERE  `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
            //pst=conn.prepareStatement(as);
            //rs=pst.executeQuery();
            int r = 0;
            int records = 0;
            while (rs.next()) {
                int dd=jTableAnnualExpence1.getRowCount()+1;                
              //  DefaultTableModel model = (DefaultTableModel) jTableDayExpence.getModel();
                model.setRowCount(dd);
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
                jTableAnnualExpence1.setValueAt(rs.getString("Expence"), r, 0);
                 jTableAnnualExpence1.setValueAt(rs.getString("Amount"), r, 1);
                  jTableAnnualExpence1.setValueAt(rs.getString("Date"), r, 2);
                   jTableAnnualExpence1.setValueAt(rs.getString("Time"), r, 3);
                    jTableAnnualExpence1.setValueAt(rs.getString("User"), r, 4);
                     r++;
            }           
          
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                
                     
}
public void AnnualStock(){
           DefaultTableModel model = (DefaultTableModel) jTableAnnualStock
                      .getModel();
                model.setRowCount(0);
        Connect connectobj = new Connect();
            conn = connectobj.connectdb();
                
//            String day=jLday.getText();
//            String month=jLmonth.getText();
//            String year=jLyear.getText();
            
             String day=(String)jCday.getSelectedItem();
                      String month=(String)jCmonth.getSelectedItem();
                      String year=(String)jCyear.getSelectedItem();
                   
                try {
            
            Statement s = conn.createStatement();
            String as = "SELECT * FROM `added_stock` WHERE `Year`='"+year+"'";
            ResultSet rs = s.executeQuery(as);
            //pst=conn.prepareStatement(as);
            //rs=pst.executeQuery();
            int r = 0;
            int records = 0;
            while (rs.next()) {
                int dd=jTableAnnualStock.getRowCount()+1;                
            //    DefaultTableModel model = (DefaultTableModel) jTDailyCashSale.getModel();
                model.setRowCount(dd);
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
                jTableAnnualStock.setValueAt(rs.getString("Brand_Code"), r, 0);
                 jTableAnnualStock.setValueAt(rs.getString("Description"), r, 1);
                  jTableAnnualStock.setValueAt(rs.getString("Specification"), r, 2);
                   jTableAnnualStock.setValueAt(rs.getString("Quantity"), r, 3);
                    jTableAnnualStock.setValueAt(rs.getString("Buying_Price"), r, 4);
                    jTableAnnualStock.setValueAt(rs.getString("Selling_Price"), r, 5);
                    jTableAnnualStock.setValueAt(rs.getString("Date"), r, 6);
                     jTableAnnualStock.setValueAt(rs.getString("Time"), r, 7);
                
                

                r++;

            }
            
          
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                
                     
}
public void GenerateAnnualAll(){
    AnnualCashSale();
    AnnualCreditSale();
    AnnualProfit();
   AnnualExpences();
   AnnualStock();
    
    int amnt=Integer.parseInt(jTAnnualprofitGain2.getText());
    int expe=Integer.parseInt(jTAnnualExpeUsed2.getText());
    int net=amnt-expe;
    jTAnnualNetProfit2.setText(String.valueOf(net));


}







}
