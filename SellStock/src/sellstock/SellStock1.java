/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sellstock;


import java.awt.Color;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sellstock.Printsupport.MyPrintable;

/**
 *
 * @author Shazka Systems
 */
public class SellStock1 extends javax.swing.JInternalFrame {
        int timeRun = 0;
    int tymerun;
        Connection conn = null;
        Statement stm=null;
       PreparedStatement pst =  null;
       ResultSet rs = null;
    /**
     * Creates new form SellStock
     */
    public SellStock1() {
        initComponents();
        receiptMax();
        sum_amount();
        current_user();
        
        GregorianCalendar today = new GregorianCalendar();
        DateFormat df = DateFormat.getDateInstance();
        Date kk = today.getTime();
        String s = df.format(kk);
        jLDate.setText(s);
        int bal;
        
        
          new Thread() {
            public void run() {
               
                /*
                 try {
                 Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " + "C:\\wamp\\wampmanager.exe");
                 } catch (Exception e) {
                 JOptionPane.showMessageDialog(null, "Error");
                 }
                 */
                while (timeRun == 0) {
                    Calendar cal = new GregorianCalendar();

                    int hour = cal.get(Calendar.HOUR);
                    int min = cal.get(Calendar.MINUTE);
                    int sec = cal.get(Calendar.SECOND);
                    
                    int day=cal.get(Calendar.DAY_OF_MONTH);
                    int month=cal.get(Calendar.MONTH)+1;
                    int year=cal.get(Calendar.YEAR);
                    
                    jLday.setText(String.valueOf(day));
                    jLmonth.setText(String.valueOf(month));
                    jLyear.setText(String.valueOf(year));
                    
                    int AM_PM = cal.get(Calendar.AM_PM);
                    String day_night = "";
                    
                    int hour2;
                    if(hour==0){
                    hour2=12;
                    }else{
                    hour2=hour;
                    }

                    if (AM_PM == 1) {
                        day_night = "PM";
                    } else {
                        day_night = "AM";
                    }
                    String time = hour2 + ":" + min + ":" + sec +" "+day_night;

                    Clock.setText(time);
                }

            }

        }.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jTSellPrice = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTqtyOrdered = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTquantityLeft = new javax.swing.JTextField();
        jCcategory = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTbrandCode = new javax.swing.JTextField();
        jTdescription = new javax.swing.JTextField();
        jTspecification = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTBuyPrice = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tab_std = new javax.swing.JTable();
        jtgrandtotal = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableStock = new javax.swing.JTable();
        jTfilBrand = new javax.swing.JTextField();
        jTfilDesc = new javax.swing.JTextField();
        jTfilSpec = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jPanelDisable = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLmonth = new javax.swing.JLabel();
        Clock = new javax.swing.JLabel();
        jLday = new javax.swing.JLabel();
        jLDate = new javax.swing.JLabel();
        jLUser = new javax.swing.JLabel();
        jLyear = new javax.swing.JLabel();
        jLrcpt_no = new javax.swing.JLabel();
        jLprofit = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setTitle("Sell Panel");

        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTSellPrice.setEditable(false);
        jTSellPrice.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTSellPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTSellPriceKeyReleased(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel9.setText("Item Category");

        jLabel7.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel7.setText("Quantity Ordered");

        jLabel3.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel3.setText("Specification");

        jTqtyOrdered.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel1.setText("Brand Code ");

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel2.setText("Description");

        jTquantityLeft.setEditable(false);
        jTquantityLeft.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jCcategory.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Select--", "Plumbing_Tools", "Electrical_Equipments", "Capentry_Tools", "Masonary_Tools", "Welding_Tools", "Timber_Products" }));

        jLabel8.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel8.setText("Selling Price");

        jLabel4.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel4.setText("Quantity Left");

        jTbrandCode.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTbrandCode.setBorder(new javax.swing.border.MatteBorder(null));
        jTbrandCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTbrandCodeKeyReleased(evt);
            }
        });

        jTdescription.setEditable(false);
        jTdescription.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTdescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTdescriptionActionPerformed(evt);
            }
        });

        jTspecification.setEditable(false);
        jTspecification.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel5.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel5.setText("Buying Price");

        jTBuyPrice.setEditable(false);
        jTBuyPrice.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTBuyPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTBuyPriceKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jTBuyPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jTspecification, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jTdescription, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jTbrandCode, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTqtyOrdered)
                            .addComponent(jCcategory, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTquantityLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTSellPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTbrandCode, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTdescription, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTspecification, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTBuyPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTSellPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTquantityLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTqtyOrdered, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCcategory, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        tab_std.setBackground(new java.awt.Color(102, 102, 0));
        tab_std.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tab_std.setForeground(new java.awt.Color(0, 204, 255));
        tab_std.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Item Name", "Price", "Quantity", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tab_std.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab_stdMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tab_std);

        jtgrandtotal.setEditable(false);
        jtgrandtotal.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jtgrandtotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtgrandtotal.setText("12345");

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/bar-code_48x48.png"))); // NOI18N
        jButton2.setText("Print Recept");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Success.png"))); // NOI18N
        jButton1.setText("Place Order");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel6.setText("GRAND  TOTAL");

        jTableStock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Brand Code", "Description", "Specification", "Qty Left", "Buy Price", "Sell Price", "Unit Profit", "Category"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableStock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableStockMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableStock);

        jTfilBrand.setFont(new java.awt.Font("Lucida Calligraphy", 0, 12)); // NOI18N
        jTfilBrand.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTfilBrand.setText("Filter By Brand Code");
        jTfilBrand.setBorder(new javax.swing.border.MatteBorder(null));
        jTfilBrand.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTfilBrandMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTfilBrandMouseExited(evt);
            }
        });
        jTfilBrand.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTfilBrandKeyReleased(evt);
            }
        });

        jTfilDesc.setFont(new java.awt.Font("Lucida Calligraphy", 0, 12)); // NOI18N
        jTfilDesc.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTfilDesc.setText("Filter By Description");
        jTfilDesc.setBorder(new javax.swing.border.MatteBorder(null));
        jTfilDesc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTfilDescMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTfilDescMouseExited(evt);
            }
        });
        jTfilDesc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTfilDescKeyReleased(evt);
            }
        });

        jTfilSpec.setFont(new java.awt.Font("Lucida Calligraphy", 0, 12)); // NOI18N
        jTfilSpec.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTfilSpec.setText("Filter By Specification");
        jTfilSpec.setBorder(new javax.swing.border.MatteBorder(null));
        jTfilSpec.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTfilSpecMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTfilSpecMouseExited(evt);
            }
        });
        jTfilSpec.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTfilSpecKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtgrandtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(211, 211, 211))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jTfilDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addComponent(jTfilSpec, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTfilBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane3))
                .addGap(23, 23, 23))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTfilDesc)
                            .addComponent(jTfilSpec)
                            .addComponent(jTfilBrand))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtgrandtotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jLmonth.setText("Month");

        Clock.setFont(new java.awt.Font("LcdD", 0, 24)); // NOI18N
        Clock.setForeground(new java.awt.Color(51, 0, 51));
        Clock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Clock.setText("12:12;12 pm");
        Clock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ClockMouseClicked(evt);
            }
        });

        jLday.setText("Day");

        jLDate.setFont(new java.awt.Font("LcdD", 0, 24)); // NOI18N
        jLDate.setForeground(new java.awt.Color(51, 0, 51));
        jLDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLDate.setText("12:12;12 pm");
        jLDate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLDateMouseClicked(evt);
            }
        });

        jLUser.setFont(new java.awt.Font("Sitka Display", 0, 18)); // NOI18N
        jLUser.setForeground(new java.awt.Color(153, 0, 153));
        jLUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLUser.setText("Current User");

        jLyear.setText("year");

        jLrcpt_no.setFont(new java.awt.Font("Sitka Display", 0, 18)); // NOI18N
        jLrcpt_no.setForeground(new java.awt.Color(153, 0, 153));
        jLrcpt_no.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLrcpt_no.setText("001");

        jLprofit.setText("Profit");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLyear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLmonth, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLday)
                .addGap(18, 18, 18)
                .addComponent(jLrcpt_no, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLDate, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(Clock, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLprofit)
                .addGap(27, 27, 27)
                .addComponent(jLUser, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Clock, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLprofit)
                    .addComponent(jLUser, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLrcpt_no, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLday)
                    .addComponent(jLmonth)
                    .addComponent(jLyear))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelDisableLayout = new javax.swing.GroupLayout(jPanelDisable);
        jPanelDisable.setLayout(jPanelDisableLayout);
        jPanelDisableLayout.setHorizontalGroup(
            jPanelDisableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDisableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelDisableLayout.setVerticalGroup(
            jPanelDisableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDisableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelDisable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelDisable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3754, 3754, 3754))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 1109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTBuyPriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTBuyPriceKeyReleased

        // TODO add your handling code here:
    }//GEN-LAST:event_jTBuyPriceKeyReleased

    private void jTSellPriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTSellPriceKeyReleased
        String dd=jTBuyPrice.getText();
        if(dd!=null){
            int bprice=Integer.parseInt(jTBuyPrice.getText());
            int sprice=Integer.parseInt(jTSellPrice.getText());

            int total=sprice-bprice;

            jTqtyOrdered.setText(String.valueOf(total));

            if(bprice>=sprice){
                jTqtyOrdered.setBackground(Color.red);
            } else{
                jTqtyOrdered.setBackground(Color.white);
            }
        }
    }//GEN-LAST:event_jTSellPriceKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    int a=Integer.parseInt(jTquantityLeft.getText());
    int b=Integer.parseInt(jTqtyOrdered.getText());
    
    if(a>b){
        
        save(); 
        table();
        
        clear_fields();
    }else{
    JOptionPane.showMessageDialog(null, "Quantity Ordered exceeds Quantity left in the Stock");
    }
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       Printsupport ps=new Printsupport();
 Object printitem [][]=ps.getTableData(tab_std);
 ps.setItems(printitem);
       
 PrinterJob pj = PrinterJob.getPrinterJob();
 pj.setPrintable(new MyPrintable(),ps.getPageFormat(pj));
       try {
            pj.print();
           
            }
        catch (PrinterException ex) {
                ex.printStackTrace();
            }
       
       delete_receipt();  
       dispose();
       
       
       
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTdescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTdescriptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTdescriptionActionPerformed

    private void jTbrandCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTbrandCodeKeyReleased
            search();        // TODO add your handling code here:
    }//GEN-LAST:event_jTbrandCodeKeyReleased

    private void jLDateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLDateMouseClicked
                table();
    }//GEN-LAST:event_jLDateMouseClicked

    private void tab_stdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab_stdMouseClicked
        table();
    }//GEN-LAST:event_tab_stdMouseClicked

    private void ClockMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ClockMouseClicked
              // TODO add your handling code here:
    }//GEN-LAST:event_ClockMouseClicked

    private void jTfilBrandKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTfilBrandKeyReleased
       filterBrandcode();        // TODO add your handling code here:
    }//GEN-LAST:event_jTfilBrandKeyReleased

    private void jTfilDescKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTfilDescKeyReleased
               filterDescription();     // TODO add your handling code here:
    }//GEN-LAST:event_jTfilDescKeyReleased

    private void jTfilSpecKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTfilSpecKeyReleased
                filterSpecification();// TODO add your handling code here:
    }//GEN-LAST:event_jTfilSpecKeyReleased

    private void jTfilDescMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTfilDescMouseClicked
       jTfilDesc.setText("");        // TODO add your handling code here:
    }//GEN-LAST:event_jTfilDescMouseClicked

    private void jTfilDescMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTfilDescMouseExited
            jTfilDesc.setText("Filter By Description");        // TODO add your handling code here:
    }//GEN-LAST:event_jTfilDescMouseExited

    private void jTfilSpecMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTfilSpecMouseClicked
        jTfilSpec.setText("");           // TODO add your handling code here:
    }//GEN-LAST:event_jTfilSpecMouseClicked

    private void jTfilBrandMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTfilBrandMouseClicked
    jTfilBrand.setText("");           // TODO add your handling code here:
    }//GEN-LAST:event_jTfilBrandMouseClicked

    private void jTfilSpecMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTfilSpecMouseExited
      jTfilSpec.setText("Filter By Description");        // TODO add your handling code here:
    }//GEN-LAST:event_jTfilSpecMouseExited

    private void jTfilBrandMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTfilBrandMouseExited
       jTfilBrand.setText("Filter By Description");        // TODO add your handling code here:
    }//GEN-LAST:event_jTfilBrandMouseExited

    private void jTableStockMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableStockMouseClicked
           try{
            int row=jTableStock.getSelectedRow();
            jTbrandCode.setText(jTableStock.getValueAt(row, 0).toString());
            jTdescription.setText(jTableStock.getValueAt(row, 1).toString());
            jTspecification.setText(jTableStock.getValueAt(row, 2).toString());
            jTquantityLeft.setText(jTableStock.getValueAt(row, 3).toString());
            jTBuyPrice.setText(jTableStock.getValueAt(row, 4).toString());
            jTSellPrice.setText(jTableStock.getValueAt(row, 5).toString());
            jLprofit.setText(jTableStock.getValueAt(row, 6).toString());
            jCcategory.setSelectedItem(jTableStock.getValueAt(row, 7).toString());
            
         }catch(Exception e)
        {
        e.printStackTrace();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jTableStockMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Clock;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jCcategory;
    private javax.swing.JLabel jLDate;
    private javax.swing.JLabel jLUser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLday;
    private javax.swing.JLabel jLmonth;
    private javax.swing.JLabel jLprofit;
    private javax.swing.JLabel jLrcpt_no;
    private javax.swing.JLabel jLyear;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanelDisable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTBuyPrice;
    private javax.swing.JTextField jTSellPrice;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableStock;
    private javax.swing.JTextField jTbrandCode;
    private javax.swing.JTextField jTdescription;
    private javax.swing.JTextField jTfilBrand;
    private javax.swing.JTextField jTfilDesc;
    private javax.swing.JTextField jTfilSpec;
    private javax.swing.JTextField jTqtyOrdered;
    private javax.swing.JTextField jTquantityLeft;
    private javax.swing.JTextField jTspecification;
    private javax.swing.JTextField jtgrandtotal;
    private javax.swing.JTable tab_std;
    // End of variables declaration//GEN-END:variables


public void save(){
                
                 Connect connectobj = new Connect();
            conn = connectobj.connectdb();
                
                String code=jTbrandCode.getText();
                String desc=jTdescription.getText();
                String speci=jTspecification.getText();
                String category=(String)jCcategory.getSelectedItem();
                int quantity=Integer.parseInt(jTquantityLeft.getText());
                int bprice=Integer.parseInt(jTBuyPrice.getText());
                int sprice=Integer.parseInt(jTSellPrice.getText());
                double qty=Double.parseDouble(jTqtyOrdered.getText());
                String tym=Clock.getText();
                String date=jLDate.getText();
                String qty2;
                Double qty3=quantity-qty;
                String rcpt_num=jLrcpt_no.getText();
                
                Double amount=sprice*qty;
                String item= speci+" "+desc;
                
                String user=jLUser.getText();
                 String day=jLday.getText();
                 String month=jLmonth.getText();
                 String year=jLyear.getText();
                 
                 int profit=Integer.parseInt(jLprofit.getText());
                Double total_profit=profit*qty;
                if(qty==0.25){
                qty2="0.25";
                }else
                    if(qty==0.5){
                qty2="0.5";
                }else
                        if(qty==0.75){
                qty2="0.75";
                }else{
                        qty2=jTqtyOrdered.getText();
                        }
               
                       try {
            //String sgl="INSERT INTO `banking`(`accnt`, `Name`, `IdNo.`, `PhoneNo`, `Email`, `Nationality`, `Occupation`, `Gender`, `MaritualStatus`, `Date`, `Balance`) VALUES ("342","karis","867","34546","karijavade","kenyan","programmer","male","single","hrjh","44232"")";
            String sql = "INSERT INTO `profit_table`( `Description`, `Profit`,`Date`,`Time`,`Day`,`Month`,`Year`,`User`)"
                    + "VALUES ('" + item + "','" + total_profit + "','" + date + "','" + tym + "','" + day + "','" + month + "','" + year + "','" + user + "')";

            pst = conn.prepareStatement(sql);
            pst.execute();
                pst.close();
           // JOptionPane.showMessageDialog(null, "Saved Successfully");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());

        }
                
                
               try {
            //String sgl="INSERT INTO `banking`(`accnt`, `Name`, `IdNo.`, `PhoneNo`, `Email`, `Nationality`, `Occupation`, `Gender`, `MaritualStatus`, `Date`, `Balance`) VALUES ("342","karis","867","34546","karijavade","kenyan","programmer","male","single","hrjh","44232"")";
            String sql = "INSERT INTO `recept`( `Item`, `Price`,`Quantity`,`Amount`)"
                    + "VALUES ('" + item + "','" + sprice + "','" + qty2 + "','" + amount + "')";

            pst = conn.prepareStatement(sql);
            pst.execute();

           // JOptionPane.showMessageDialog(null, "Saved Successfully");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());

        }       
               
                try {
            //String sgl="INSERT INTO `banking`(`accnt`, `Name`, `IdNo.`, `PhoneNo`, `Email`, `Nationality`, `Occupation`, `Gender`, `MaritualStatus`, `Date`, `Balance`) VALUES ("342","karis","867","34546","karijavade","kenyan","programmer","male","single","hrjh","44232"")";
            String sql = "INSERT INTO `sold_items`( `Receipt_No`, `Item`,`Unit_Price`,`Quantity`,`Amount`,`Date`,`Time`,`Day`,`Month`,`Year`,`Sold_By`)"
                    + "VALUES ('" + rcpt_num + "','" + item + "','" + sprice + "','" + qty2 + "','" + amount + "','" + date + "','" + tym + "','" + day + "','" + month + "','" + year + "','" + user + "')";

            pst = conn.prepareStatement(sql);
            pst.execute();

           // JOptionPane.showMessageDialog(null, "Saved Successfully");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());

        } 
                try {
            //String sgl="INSERT INTO `banking`(`accnt`, `Name`, `IdNo.`, `PhoneNo`, `Email`, `Nationality`, `Occupation`, `Gender`, `MaritualStatus`, `Date`, `Balance`) VALUES ("342","karis","867","34546","karijavade","kenyan","programmer","male","single","hrjh","44232"")";
            String sql = "Update `stock` set `Quantity`='" + qty3 + "' where`Brand_Code`='" + code + "'";

            pst = conn.prepareStatement(sql);
            pst.execute();

           // JOptionPane.showMessageDialog(null, "Saved Successfully");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());

        } 


            }
          
public void search(){
   
         Connect connectobj = new Connect();
        conn = connectobj.connectdb();

        String code = jTbrandCode.getText();
        try {
            Statement stm = conn.createStatement();
            String sql = "select * from stock where Brand_Code = '" + code + "'";
            rs = stm.executeQuery(sql);

            while (rs.next()) {
                    //out_table.setModel(DbUtils.resultSetToTableModel(rs));
                    String cod = rs.getString("Brand_Code");                    
                    String desc = rs.getString("Description");                    
                    String spec = rs.getString("Specification");                    
                    String qty = rs.getString("Quantity");              
                    String bprice = rs.getString("Buying_Price");
                    String sprice = rs.getString("Selling_Price");
                    String profit = rs.getString("Unit_Profit");
                     String category = rs.getString("Item_Category");                    
                     
                     jLprofit.setText(profit);
                    jTdescription.setText(desc);
                    jTspecification.setText(spec);
                    jTquantityLeft.setText(qty);
                    jTBuyPrice.setText(bprice);
                    jTSellPrice.setText(sprice);
                    jCcategory.setSelectedItem(category);            
                        }
             rs.close();
            stm.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
   }
        
public void table(){                  
                  ajah();
             Connect connectobj = new Connect();
           conn = connectobj.connectdb();
           try {
           
            Statement s = conn.createStatement();
            String as = "SELECT*FROM recept";
            ResultSet rs = s.executeQuery(as);
            int r = 0;
            int records = 0;
            while (rs.next()) {
                 int dd=tab_std.getRowCount()+1;                
                DefaultTableModel model = (DefaultTableModel) tab_std.getModel();
                model.setRowCount(dd);
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
               tab_std.setValueAt(rs.getString("Item"), r, 0);
                tab_std.setValueAt(rs.getString("Price"), r, 1);
                tab_std.setValueAt(rs.getString("Quantity"), r, 2);
                tab_std.setValueAt(rs.getString("Amount"), r, 3);
                r++;           
            }
             rs.close();
            s.close();
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }        
          try {
             Statement s = conn.createStatement();
            String as = "SELECT SUM(Amount) FROM recept";
            ResultSet rs = s.executeQuery(as);
            int r = 0;
            int records = 0;
            while (rs.next()) {
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
                String dd=rs.getString("Sum(Amount)");
               jtgrandtotal.setText(dd);
                r++;
            }
             rs.close();
            s.close();
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }       
      }
public void delete_receipt(){
               Connect connectobj = new Connect();
        conn = connectobj.connectdb();               
                try {
             String sql = "DELETE FROM recept";
            pst = conn.prepareStatement(sql);
            pst.execute();
            pst.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }                  
              }
              
public void receiptMax(){              
                  Connect connectobj = new Connect();
            conn = connectobj.connectdb();
                  try {           
            Statement s = conn.createStatement();
            String as = "SELECT MAX(Receipt_NO) FROM sold_items";
            ResultSet rs = s.executeQuery(as);
            int r = 0;
            int records = 0;
            while (rs.next()) {
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
                int dd=rs.getInt("MAX(Receipt_NO)");
               jLrcpt_no.setText(String.valueOf(dd+1));
                r++;
            }
             rs.close();
            s.close();
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
              }

public void ajah(){
              
              DefaultTableModel model = (DefaultTableModel) tab_std.getModel();
                model.setRowCount(0);
              }
             
   
public  void sum_amount(){
                            ajah();
                Connect connectobj = new Connect();
                conn = connectobj.connectdb();
              String dd;
                   try {
           
            Statement s = conn.createStatement();
            String as = "SELECT SUM(Amount) FROM recept";
            ResultSet rs = s.executeQuery(as);
               int r = 0;
            int records = 0;
          
            while (rs.next()) {
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
                dd=rs.getString("Sum(Amount)");
               jtgrandtotal.setText(dd);             
                
                r++;
            }
             rs.close();
            s.close();
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }         
         }
              
    public String total(){
              return jtgrandtotal.getText();
              }
              
    public String user(){
              return jLUser.getText();
              }
              
    public String recept_number(){
                   int num=Integer.parseInt(jLrcpt_no.getText());
                   int num2=num-1;
                   String num3=String.valueOf(num2);
              return num3;
              }
              
public void current_user(){
    
         Connect connectobj = new Connect();
        conn = connectobj.connectdb();             
        
        try {
            Statement stm = conn.createStatement();
            String sql = "SELECT * FROM `current_user` WHERE `Id`=1 ";
            rs = stm.executeQuery(sql);

            while (rs.next()) {
                   
                  // int bal = rs.getInt("MAX(id)");  
                   String name=rs.getString("UserName");
                   
                   jLUser.setText(name);                   
                 }
             rs.close();
            stm.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
                JOptionPane.showMessageDialog(null, "Saved recorded SKKKKKKKKKKKKKKKKKuccessfully");
        }
    
    }
                 
public void clear_fields(){
                 jTbrandCode.setText("");
                 jTdescription.setText("");
                 jTspecification.setText("");
                 jTSellPrice.setText("");
                 jTBuyPrice.setText("");
                 jTquantityLeft.setText("");
                 jTqtyOrdered.setText("");
                 jCcategory.setSelectedIndex(0);
                 
                 }
       
 public void filterDescription(){
           DefaultTableModel model = (DefaultTableModel) jTableStock
                      .getModel();
                model.setRowCount(0);
        Connect connectobj = new Connect();
            conn = connectobj.connectdb();
         String filter=jTfilDesc.getText();
                   
                try {
            
            Statement s = conn.createStatement();
            String as = "SELECT * FROM `stock` WHERE `Description` LIKE '%"+filter+"%'";
            ResultSet rs = s.executeQuery(as);
            //pst=conn.prepareStatement(as);
            //rs=pst.executeQuery();
            int r = 0;
            int records = 0;
            while (rs.next()) {
                int dd=jTableStock.getRowCount()+1;                
            //    DefaultTableModel model = (DefaultTableModel) jTDailyCashSale.getModel();
                model.setRowCount(dd);
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
                jTableStock.setValueAt(rs.getString("Brand_Code"), r, 0);
                 jTableStock.setValueAt(rs.getString("Description"), r, 1);
                  jTableStock.setValueAt(rs.getString("Specification"), r, 2);
                   jTableStock.setValueAt(rs.getString("Quantity"), r, 3);
                    jTableStock.setValueAt(rs.getString("Buying_Price"), r, 4);
                    jTableStock.setValueAt(rs.getString("Selling_Price"), r, 5);
                    jTableStock.setValueAt(rs.getString("Unit_Profit"), r, 6);
                     jTableStock.setValueAt(rs.getString("Item_Category"), r, 7);
                
                

                r++;

            }
            
           rs.close();
            s.close();
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                
                     
} 
 
  public void filterSpecification(){
           DefaultTableModel model = (DefaultTableModel) jTableStock
                      .getModel();
                model.setRowCount(0);
        Connect connectobj = new Connect();
            conn = connectobj.connectdb();
         String filter=jTfilSpec.getText();
                   
                try {
            
            Statement s = conn.createStatement();
            String as = "SELECT * FROM `stock` WHERE `Specification` LIKE '%"+filter+"%'";
            ResultSet rs = s.executeQuery(as);
            //pst=conn.prepareStatement(as);
            //rs=pst.executeQuery();
            int r = 0;
            int records = 0;
            while (rs.next()) {
                int dd=jTableStock.getRowCount()+1;                
            //    DefaultTableModel model = (DefaultTableModel) jTDailyCashSale.getModel();
                model.setRowCount(dd);
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
                jTableStock.setValueAt(rs.getString("Brand_Code"), r, 0);
                 jTableStock.setValueAt(rs.getString("Description"), r, 1);
                  jTableStock.setValueAt(rs.getString("Specification"), r, 2);
                   jTableStock.setValueAt(rs.getString("Quantity"), r, 3);
                    jTableStock.setValueAt(rs.getString("Buying_Price"), r, 4);
                    jTableStock.setValueAt(rs.getString("Selling_Price"), r, 5);
                    jTableStock.setValueAt(rs.getString("Unit_Profit"), r, 6);
                     jTableStock.setValueAt(rs.getString("Item_Category"), r, 7);
                
                

                r++;

            }
             rs.close();
            s.close();
          
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                
                     
} 
  
   public void filterBrandcode(){
           DefaultTableModel model = (DefaultTableModel) jTableStock
                      .getModel();
                model.setRowCount(0);
        Connect connectobj = new Connect();
            conn = connectobj.connectdb();
         String filter=jTfilBrand.getText();
                   
                try {
            
            Statement s = conn.createStatement();
            String as = "SELECT * FROM `stock` WHERE `Brand_Code` LIKE '%"+filter+"%'";
            ResultSet rs = s.executeQuery(as);
            //pst=conn.prepareStatement(as);
            //rs=pst.executeQuery();
            int r = 0;
            int records = 0;
            while (rs.next()) {
                int dd=jTableStock.getRowCount()+1;                
            //    DefaultTableModel model = (DefaultTableModel) jTDailyCashSale.getModel();
                model.setRowCount(dd);
                //table_optical.setModel(DbUtils.resultSetToTableModel(rs));
                jTableStock.setValueAt(rs.getString("Brand_Code"), r, 0);
                 jTableStock.setValueAt(rs.getString("Description"), r, 1);
                  jTableStock.setValueAt(rs.getString("Specification"), r, 2);
                   jTableStock.setValueAt(rs.getString("Quantity"), r, 3);
                    jTableStock.setValueAt(rs.getString("Buying_Price"), r, 4);
                    jTableStock.setValueAt(rs.getString("Selling_Price"), r, 5);
                    jTableStock.setValueAt(rs.getString("Unit_Profit"), r, 6);
                     jTableStock.setValueAt(rs.getString("Item_Category"), r, 7);
                
                

                r++;

            }
            
           rs.close();
            s.close();
        } catch (SQLException m) {
            JOptionPane.showMessageDialog(null, m);
        }
                
                     
} 
              
}
